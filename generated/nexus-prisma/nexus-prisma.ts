/**
 * This file was automatically generated by nexus-prisma@0.3.5
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      Pokemon: PokemonObject
      Ability: AbilityObject
      Form: FormObject
      GameIndex: GameIndexObject
      Item: ItemObject
      Move: MoveObject
      Species: SpeciesObject
      Sprite: SpriteObject
      Stat: StatObject
      Type: TypeObject
      PokemonConnection: PokemonConnectionObject
      PageInfo: PageInfoObject
      PokemonEdge: PokemonEdgeObject
      AggregatePokemon: AggregatePokemonObject
      AbilityConnection: AbilityConnectionObject
      AbilityEdge: AbilityEdgeObject
      AggregateAbility: AggregateAbilityObject
      FormConnection: FormConnectionObject
      FormEdge: FormEdgeObject
      AggregateForm: AggregateFormObject
      GameIndexConnection: GameIndexConnectionObject
      GameIndexEdge: GameIndexEdgeObject
      AggregateGameIndex: AggregateGameIndexObject
      ItemConnection: ItemConnectionObject
      ItemEdge: ItemEdgeObject
      AggregateItem: AggregateItemObject
      MoveConnection: MoveConnectionObject
      MoveEdge: MoveEdgeObject
      AggregateMove: AggregateMoveObject
      SpeciesConnection: SpeciesConnectionObject
      SpeciesEdge: SpeciesEdgeObject
      AggregateSpecies: AggregateSpeciesObject
      SpriteConnection: SpriteConnectionObject
      SpriteEdge: SpriteEdgeObject
      AggregateSprite: AggregateSpriteObject
      StatConnection: StatConnectionObject
      StatEdge: StatEdgeObject
      AggregateStat: AggregateStatObject
      TypeConnection: TypeConnectionObject
      TypeEdge: TypeEdgeObject
      AggregateType: AggregateTypeObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      PokemonSubscriptionPayload: PokemonSubscriptionPayloadObject
      PokemonPreviousValues: PokemonPreviousValuesObject
      AbilitySubscriptionPayload: AbilitySubscriptionPayloadObject
      AbilityPreviousValues: AbilityPreviousValuesObject
      FormSubscriptionPayload: FormSubscriptionPayloadObject
      FormPreviousValues: FormPreviousValuesObject
      GameIndexSubscriptionPayload: GameIndexSubscriptionPayloadObject
      GameIndexPreviousValues: GameIndexPreviousValuesObject
      ItemSubscriptionPayload: ItemSubscriptionPayloadObject
      ItemPreviousValues: ItemPreviousValuesObject
      MoveSubscriptionPayload: MoveSubscriptionPayloadObject
      MovePreviousValues: MovePreviousValuesObject
      SpeciesSubscriptionPayload: SpeciesSubscriptionPayloadObject
      SpeciesPreviousValues: SpeciesPreviousValuesObject
      SpriteSubscriptionPayload: SpriteSubscriptionPayloadObject
      SpritePreviousValues: SpritePreviousValuesObject
      StatSubscriptionPayload: StatSubscriptionPayloadObject
      StatPreviousValues: StatPreviousValuesObject
      TypeSubscriptionPayload: TypeSubscriptionPayloadObject
      TypePreviousValues: TypePreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      Pokemon: PokemonFieldDetails
      Ability: AbilityFieldDetails
      Form: FormFieldDetails
      GameIndex: GameIndexFieldDetails
      Item: ItemFieldDetails
      Move: MoveFieldDetails
      Species: SpeciesFieldDetails
      Sprite: SpriteFieldDetails
      Stat: StatFieldDetails
      Type: TypeFieldDetails
      PokemonConnection: PokemonConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      PokemonEdge: PokemonEdgeFieldDetails
      AggregatePokemon: AggregatePokemonFieldDetails
      AbilityConnection: AbilityConnectionFieldDetails
      AbilityEdge: AbilityEdgeFieldDetails
      AggregateAbility: AggregateAbilityFieldDetails
      FormConnection: FormConnectionFieldDetails
      FormEdge: FormEdgeFieldDetails
      AggregateForm: AggregateFormFieldDetails
      GameIndexConnection: GameIndexConnectionFieldDetails
      GameIndexEdge: GameIndexEdgeFieldDetails
      AggregateGameIndex: AggregateGameIndexFieldDetails
      ItemConnection: ItemConnectionFieldDetails
      ItemEdge: ItemEdgeFieldDetails
      AggregateItem: AggregateItemFieldDetails
      MoveConnection: MoveConnectionFieldDetails
      MoveEdge: MoveEdgeFieldDetails
      AggregateMove: AggregateMoveFieldDetails
      SpeciesConnection: SpeciesConnectionFieldDetails
      SpeciesEdge: SpeciesEdgeFieldDetails
      AggregateSpecies: AggregateSpeciesFieldDetails
      SpriteConnection: SpriteConnectionFieldDetails
      SpriteEdge: SpriteEdgeFieldDetails
      AggregateSprite: AggregateSpriteFieldDetails
      StatConnection: StatConnectionFieldDetails
      StatEdge: StatEdgeFieldDetails
      AggregateStat: AggregateStatFieldDetails
      TypeConnection: TypeConnectionFieldDetails
      TypeEdge: TypeEdgeFieldDetails
      AggregateType: AggregateTypeFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      PokemonSubscriptionPayload: PokemonSubscriptionPayloadFieldDetails
      PokemonPreviousValues: PokemonPreviousValuesFieldDetails
      AbilitySubscriptionPayload: AbilitySubscriptionPayloadFieldDetails
      AbilityPreviousValues: AbilityPreviousValuesFieldDetails
      FormSubscriptionPayload: FormSubscriptionPayloadFieldDetails
      FormPreviousValues: FormPreviousValuesFieldDetails
      GameIndexSubscriptionPayload: GameIndexSubscriptionPayloadFieldDetails
      GameIndexPreviousValues: GameIndexPreviousValuesFieldDetails
      ItemSubscriptionPayload: ItemSubscriptionPayloadFieldDetails
      ItemPreviousValues: ItemPreviousValuesFieldDetails
      MoveSubscriptionPayload: MoveSubscriptionPayloadFieldDetails
      MovePreviousValues: MovePreviousValuesFieldDetails
      SpeciesSubscriptionPayload: SpeciesSubscriptionPayloadFieldDetails
      SpeciesPreviousValues: SpeciesPreviousValuesFieldDetails
      SpriteSubscriptionPayload: SpriteSubscriptionPayloadFieldDetails
      SpritePreviousValues: SpritePreviousValuesFieldDetails
      StatSubscriptionPayload: StatSubscriptionPayloadFieldDetails
      StatPreviousValues: StatPreviousValuesFieldDetails
      TypeSubscriptionPayload: TypeSubscriptionPayloadFieldDetails
      TypePreviousValues: TypePreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      PokemonWhereUniqueInput: PokemonWhereUniqueInputInputObject
      AbilityWhereInput: AbilityWhereInputInputObject
      FormWhereInput: FormWhereInputInputObject
      GameIndexWhereInput: GameIndexWhereInputInputObject
      ItemWhereInput: ItemWhereInputInputObject
      MoveWhereInput: MoveWhereInputInputObject
      SpeciesWhereInput: SpeciesWhereInputInputObject
      SpriteWhereInput: SpriteWhereInputInputObject
      StatWhereInput: StatWhereInputInputObject
      TypeWhereInput: TypeWhereInputInputObject
      PokemonWhereInput: PokemonWhereInputInputObject
      PokemonCreateInput: PokemonCreateInputInputObject
      AbilityCreateManyInput: AbilityCreateManyInputInputObject
      AbilityCreateInput: AbilityCreateInputInputObject
      FormCreateManyInput: FormCreateManyInputInputObject
      FormCreateInput: FormCreateInputInputObject
      GameIndexCreateManyInput: GameIndexCreateManyInputInputObject
      GameIndexCreateInput: GameIndexCreateInputInputObject
      ItemCreateManyInput: ItemCreateManyInputInputObject
      ItemCreateInput: ItemCreateInputInputObject
      MoveCreateManyInput: MoveCreateManyInputInputObject
      MoveCreateInput: MoveCreateInputInputObject
      SpeciesCreateManyInput: SpeciesCreateManyInputInputObject
      SpeciesCreateInput: SpeciesCreateInputInputObject
      SpriteCreateManyInput: SpriteCreateManyInputInputObject
      SpriteCreateInput: SpriteCreateInputInputObject
      StatCreateManyInput: StatCreateManyInputInputObject
      StatCreateInput: StatCreateInputInputObject
      TypeCreateManyInput: TypeCreateManyInputInputObject
      TypeCreateInput: TypeCreateInputInputObject
      PokemonUpdateInput: PokemonUpdateInputInputObject
      AbilityUpdateManyInput: AbilityUpdateManyInputInputObject
      AbilityScalarWhereInput: AbilityScalarWhereInputInputObject
      AbilityUpdateManyWithWhereNestedInput: AbilityUpdateManyWithWhereNestedInputInputObject
      AbilityUpdateManyDataInput: AbilityUpdateManyDataInputInputObject
      FormUpdateManyInput: FormUpdateManyInputInputObject
      FormScalarWhereInput: FormScalarWhereInputInputObject
      FormUpdateManyWithWhereNestedInput: FormUpdateManyWithWhereNestedInputInputObject
      FormUpdateManyDataInput: FormUpdateManyDataInputInputObject
      GameIndexUpdateManyInput: GameIndexUpdateManyInputInputObject
      GameIndexScalarWhereInput: GameIndexScalarWhereInputInputObject
      GameIndexUpdateManyWithWhereNestedInput: GameIndexUpdateManyWithWhereNestedInputInputObject
      GameIndexUpdateManyDataInput: GameIndexUpdateManyDataInputInputObject
      ItemUpdateManyInput: ItemUpdateManyInputInputObject
      ItemScalarWhereInput: ItemScalarWhereInputInputObject
      ItemUpdateManyWithWhereNestedInput: ItemUpdateManyWithWhereNestedInputInputObject
      ItemUpdateManyDataInput: ItemUpdateManyDataInputInputObject
      MoveUpdateManyInput: MoveUpdateManyInputInputObject
      MoveScalarWhereInput: MoveScalarWhereInputInputObject
      MoveUpdateManyWithWhereNestedInput: MoveUpdateManyWithWhereNestedInputInputObject
      MoveUpdateManyDataInput: MoveUpdateManyDataInputInputObject
      SpeciesUpdateManyInput: SpeciesUpdateManyInputInputObject
      SpeciesScalarWhereInput: SpeciesScalarWhereInputInputObject
      SpeciesUpdateManyWithWhereNestedInput: SpeciesUpdateManyWithWhereNestedInputInputObject
      SpeciesUpdateManyDataInput: SpeciesUpdateManyDataInputInputObject
      SpriteUpdateManyInput: SpriteUpdateManyInputInputObject
      SpriteScalarWhereInput: SpriteScalarWhereInputInputObject
      SpriteUpdateManyWithWhereNestedInput: SpriteUpdateManyWithWhereNestedInputInputObject
      SpriteUpdateManyDataInput: SpriteUpdateManyDataInputInputObject
      StatUpdateManyInput: StatUpdateManyInputInputObject
      StatScalarWhereInput: StatScalarWhereInputInputObject
      StatUpdateManyWithWhereNestedInput: StatUpdateManyWithWhereNestedInputInputObject
      StatUpdateManyDataInput: StatUpdateManyDataInputInputObject
      TypeUpdateManyInput: TypeUpdateManyInputInputObject
      TypeScalarWhereInput: TypeScalarWhereInputInputObject
      TypeUpdateManyWithWhereNestedInput: TypeUpdateManyWithWhereNestedInputInputObject
      TypeUpdateManyDataInput: TypeUpdateManyDataInputInputObject
      PokemonUpdateManyMutationInput: PokemonUpdateManyMutationInputInputObject
      AbilityUpdateManyMutationInput: AbilityUpdateManyMutationInputInputObject
      FormUpdateManyMutationInput: FormUpdateManyMutationInputInputObject
      GameIndexUpdateManyMutationInput: GameIndexUpdateManyMutationInputInputObject
      ItemUpdateManyMutationInput: ItemUpdateManyMutationInputInputObject
      MoveUpdateManyMutationInput: MoveUpdateManyMutationInputInputObject
      SpeciesUpdateManyMutationInput: SpeciesUpdateManyMutationInputInputObject
      SpriteUpdateManyMutationInput: SpriteUpdateManyMutationInputInputObject
      StatUpdateManyMutationInput: StatUpdateManyMutationInputInputObject
      TypeUpdateManyMutationInput: TypeUpdateManyMutationInputInputObject
      PokemonSubscriptionWhereInput: PokemonSubscriptionWhereInputInputObject
      AbilitySubscriptionWhereInput: AbilitySubscriptionWhereInputInputObject
      FormSubscriptionWhereInput: FormSubscriptionWhereInputInputObject
      GameIndexSubscriptionWhereInput: GameIndexSubscriptionWhereInputInputObject
      ItemSubscriptionWhereInput: ItemSubscriptionWhereInputInputObject
      MoveSubscriptionWhereInput: MoveSubscriptionWhereInputInputObject
      SpeciesSubscriptionWhereInput: SpeciesSubscriptionWhereInputInputObject
      SpriteSubscriptionWhereInput: SpriteSubscriptionWhereInputInputObject
      StatSubscriptionWhereInput: StatSubscriptionWhereInputInputObject
      TypeSubscriptionWhereInput: TypeSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    AbilityOrderByInput: AbilityOrderByInputValues,
    FormOrderByInput: FormOrderByInputValues,
    GameIndexOrderByInput: GameIndexOrderByInputValues,
    ItemOrderByInput: ItemOrderByInputValues,
    MoveOrderByInput: MoveOrderByInputValues,
    SpeciesOrderByInput: SpeciesOrderByInputValues,
    SpriteOrderByInput: SpriteOrderByInputValues,
    StatOrderByInput: StatOrderByInputValues,
    TypeOrderByInput: TypeOrderByInputValues,
    PokemonOrderByInput: PokemonOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'pokemon', args?: QueryPokemonArgs[] | false, alias?: string  } 
  | { name: 'pokemons', args?: QueryPokemonsArgs[] | false, alias?: string  } 
  | { name: 'pokemonsConnection', args?: QueryPokemonsConnectionArgs[] | false, alias?: string  } 
  | { name: 'abilities', args?: QueryAbilitiesArgs[] | false, alias?: string  } 
  | { name: 'abilitiesConnection', args?: QueryAbilitiesConnectionArgs[] | false, alias?: string  } 
  | { name: 'forms', args?: QueryFormsArgs[] | false, alias?: string  } 
  | { name: 'formsConnection', args?: QueryFormsConnectionArgs[] | false, alias?: string  } 
  | { name: 'gameIndexes', args?: QueryGameIndexesArgs[] | false, alias?: string  } 
  | { name: 'gameIndexesConnection', args?: QueryGameIndexesConnectionArgs[] | false, alias?: string  } 
  | { name: 'items', args?: QueryItemsArgs[] | false, alias?: string  } 
  | { name: 'itemsConnection', args?: QueryItemsConnectionArgs[] | false, alias?: string  } 
  | { name: 'moves', args?: QueryMovesArgs[] | false, alias?: string  } 
  | { name: 'movesConnection', args?: QueryMovesConnectionArgs[] | false, alias?: string  } 
  | { name: 'specieses', args?: QuerySpeciesesArgs[] | false, alias?: string  } 
  | { name: 'speciesesConnection', args?: QuerySpeciesesConnectionArgs[] | false, alias?: string  } 
  | { name: 'sprites', args?: QuerySpritesArgs[] | false, alias?: string  } 
  | { name: 'spritesConnection', args?: QuerySpritesConnectionArgs[] | false, alias?: string  } 
  | { name: 'stats', args?: QueryStatsArgs[] | false, alias?: string  } 
  | { name: 'statsConnection', args?: QueryStatsConnectionArgs[] | false, alias?: string  } 
  | { name: 'types', args?: QueryTypesArgs[] | false, alias?: string  } 
  | { name: 'typesConnection', args?: QueryTypesConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'pokemon'
  | 'pokemons'
  | 'pokemonsConnection'
  | 'abilities'
  | 'abilitiesConnection'
  | 'forms'
  | 'formsConnection'
  | 'gameIndexes'
  | 'gameIndexesConnection'
  | 'items'
  | 'itemsConnection'
  | 'moves'
  | 'movesConnection'
  | 'specieses'
  | 'speciesesConnection'
  | 'sprites'
  | 'spritesConnection'
  | 'stats'
  | 'statsConnection'
  | 'types'
  | 'typesConnection'


type QueryPokemonArgs =
  | 'where'
type QueryPokemonsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPokemonsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAbilitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAbilitiesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryFormsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryFormsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGameIndexesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGameIndexesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMovesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMovesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySpeciesesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySpeciesesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySpritesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySpritesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryStatsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryStatsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTypesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTypesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  pokemon: {
    type: 'Pokemon'
    args: Record<QueryPokemonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PokemonWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Pokemon | null> | prisma.Pokemon | null
  }
  pokemons: {
    type: 'Pokemon'
    args: Record<QueryPokemonsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PokemonWhereInput | null, orderBy?: prisma.PokemonOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Pokemon[]> | prisma.Pokemon[]
  }
  pokemonsConnection: {
    type: 'PokemonConnection'
    args: Record<QueryPokemonsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PokemonWhereInput | null, orderBy?: prisma.PokemonOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PokemonConnection> | prisma.PokemonConnection
  }
  abilities: {
    type: 'Ability'
    args: Record<QueryAbilitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AbilityWhereInput | null, orderBy?: prisma.AbilityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Ability[]> | prisma.Ability[]
  }
  abilitiesConnection: {
    type: 'AbilityConnection'
    args: Record<QueryAbilitiesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AbilityWhereInput | null, orderBy?: prisma.AbilityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AbilityConnection> | prisma.AbilityConnection
  }
  forms: {
    type: 'Form'
    args: Record<QueryFormsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: FormWhereInput | null, orderBy?: prisma.FormOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Form[]> | prisma.Form[]
  }
  formsConnection: {
    type: 'FormConnection'
    args: Record<QueryFormsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: FormWhereInput | null, orderBy?: prisma.FormOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FormConnection> | prisma.FormConnection
  }
  gameIndexes: {
    type: 'GameIndex'
    args: Record<QueryGameIndexesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: GameIndexWhereInput | null, orderBy?: prisma.GameIndexOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GameIndex[]> | prisma.GameIndex[]
  }
  gameIndexesConnection: {
    type: 'GameIndexConnection'
    args: Record<QueryGameIndexesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: GameIndexWhereInput | null, orderBy?: prisma.GameIndexOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GameIndexConnection> | prisma.GameIndexConnection
  }
  items: {
    type: 'Item'
    args: Record<QueryItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ItemWhereInput | null, orderBy?: prisma.ItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Item[]> | prisma.Item[]
  }
  itemsConnection: {
    type: 'ItemConnection'
    args: Record<QueryItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ItemWhereInput | null, orderBy?: prisma.ItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ItemConnection> | prisma.ItemConnection
  }
  moves: {
    type: 'Move'
    args: Record<QueryMovesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MoveWhereInput | null, orderBy?: prisma.MoveOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Move[]> | prisma.Move[]
  }
  movesConnection: {
    type: 'MoveConnection'
    args: Record<QueryMovesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MoveWhereInput | null, orderBy?: prisma.MoveOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MoveConnection> | prisma.MoveConnection
  }
  specieses: {
    type: 'Species'
    args: Record<QuerySpeciesesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SpeciesWhereInput | null, orderBy?: prisma.SpeciesOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Species[]> | prisma.Species[]
  }
  speciesesConnection: {
    type: 'SpeciesConnection'
    args: Record<QuerySpeciesesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SpeciesWhereInput | null, orderBy?: prisma.SpeciesOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpeciesConnection> | prisma.SpeciesConnection
  }
  sprites: {
    type: 'Sprite'
    args: Record<QuerySpritesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SpriteWhereInput | null, orderBy?: prisma.SpriteOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Sprite[]> | prisma.Sprite[]
  }
  spritesConnection: {
    type: 'SpriteConnection'
    args: Record<QuerySpritesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SpriteWhereInput | null, orderBy?: prisma.SpriteOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpriteConnection> | prisma.SpriteConnection
  }
  stats: {
    type: 'Stat'
    args: Record<QueryStatsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: StatWhereInput | null, orderBy?: prisma.StatOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Stat[]> | prisma.Stat[]
  }
  statsConnection: {
    type: 'StatConnection'
    args: Record<QueryStatsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: StatWhereInput | null, orderBy?: prisma.StatOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.StatConnection> | prisma.StatConnection
  }
  types: {
    type: 'Type'
    args: Record<QueryTypesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TypeWhereInput | null, orderBy?: prisma.TypeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Type[]> | prisma.Type[]
  }
  typesConnection: {
    type: 'TypeConnection'
    args: Record<QueryTypesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TypeWhereInput | null, orderBy?: prisma.TypeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TypeConnection> | prisma.TypeConnection
  }
}
  

// Types for Pokemon

type PokemonObject =
  | PokemonFields
  | { name: 'abilities', args?: PokemonAbilitiesArgs[] | false, alias?: string  } 
  | { name: 'base_experience', args?: [] | false, alias?: string  } 
  | { name: 'forms', args?: PokemonFormsArgs[] | false, alias?: string  } 
  | { name: 'game_indices', args?: PokemonGame_indicesArgs[] | false, alias?: string  } 
  | { name: 'held_items', args?: PokemonHeld_itemsArgs[] | false, alias?: string  } 
  | { name: 'height', args?: [] | false, alias?: string  } 
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'is_default', args?: [] | false, alias?: string  } 
  | { name: 'location_area_encounters', args?: [] | false, alias?: string  } 
  | { name: 'moves', args?: PokemonMovesArgs[] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'order', args?: [] | false, alias?: string  } 
  | { name: 'species', args?: PokemonSpeciesArgs[] | false, alias?: string  } 
  | { name: 'sprites', args?: PokemonSpritesArgs[] | false, alias?: string  } 
  | { name: 'stats', args?: PokemonStatsArgs[] | false, alias?: string  } 
  | { name: 'types', args?: PokemonTypesArgs[] | false, alias?: string  } 
  | { name: 'weight', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type PokemonFields =
  | 'abilities'
  | 'base_experience'
  | 'forms'
  | 'game_indices'
  | 'held_items'
  | 'height'
  | 'id'
  | 'is_default'
  | 'location_area_encounters'
  | 'moves'
  | 'name'
  | 'order'
  | 'species'
  | 'sprites'
  | 'stats'
  | 'types'
  | 'weight'
  | 'url'


type PokemonAbilitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type PokemonFormsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type PokemonGame_indicesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type PokemonHeld_itemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type PokemonMovesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type PokemonSpeciesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type PokemonSpritesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type PokemonStatsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type PokemonTypesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface PokemonFieldDetails {
  abilities: {
    type: 'Ability'
    args: Record<PokemonAbilitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Pokemon">,
      args: { where?: AbilityWhereInput | null, orderBy?: prisma.AbilityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Ability[]> | prisma.Ability[]
  }
  base_experience: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  forms: {
    type: 'Form'
    args: Record<PokemonFormsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Pokemon">,
      args: { where?: FormWhereInput | null, orderBy?: prisma.FormOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Form[]> | prisma.Form[]
  }
  game_indices: {
    type: 'GameIndex'
    args: Record<PokemonGame_indicesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Pokemon">,
      args: { where?: GameIndexWhereInput | null, orderBy?: prisma.GameIndexOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GameIndex[]> | prisma.GameIndex[]
  }
  held_items: {
    type: 'Item'
    args: Record<PokemonHeld_itemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Pokemon">,
      args: { where?: ItemWhereInput | null, orderBy?: prisma.ItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Item[]> | prisma.Item[]
  }
  height: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  is_default: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  location_area_encounters: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  moves: {
    type: 'Move'
    args: Record<PokemonMovesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Pokemon">,
      args: { where?: MoveWhereInput | null, orderBy?: prisma.MoveOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Move[]> | prisma.Move[]
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  order: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  species: {
    type: 'Species'
    args: Record<PokemonSpeciesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Pokemon">,
      args: { where?: SpeciesWhereInput | null, orderBy?: prisma.SpeciesOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Species[]> | prisma.Species[]
  }
  sprites: {
    type: 'Sprite'
    args: Record<PokemonSpritesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Pokemon">,
      args: { where?: SpriteWhereInput | null, orderBy?: prisma.SpriteOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Sprite[]> | prisma.Sprite[]
  }
  stats: {
    type: 'Stat'
    args: Record<PokemonStatsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Pokemon">,
      args: { where?: StatWhereInput | null, orderBy?: prisma.StatOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Stat[]> | prisma.Stat[]
  }
  types: {
    type: 'Type'
    args: Record<PokemonTypesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Pokemon">,
      args: { where?: TypeWhereInput | null, orderBy?: prisma.TypeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Type[]> | prisma.Type[]
  }
  weight: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Ability

type AbilityObject =
  | AbilityFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type AbilityFields =
  | 'name'
  | 'url'



  

export interface AbilityFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Form

type FormObject =
  | FormFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type FormFields =
  | 'name'
  | 'url'



  

export interface FormFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for GameIndex

type GameIndexObject =
  | GameIndexFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type GameIndexFields =
  | 'name'
  | 'url'



  

export interface GameIndexFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Item

type ItemObject =
  | ItemFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type ItemFields =
  | 'name'
  | 'url'



  

export interface ItemFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Move

type MoveObject =
  | MoveFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type MoveFields =
  | 'name'
  | 'url'



  

export interface MoveFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Species

type SpeciesObject =
  | SpeciesFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type SpeciesFields =
  | 'name'
  | 'url'



  

export interface SpeciesFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Sprite

type SpriteObject =
  | SpriteFields
  | { name: 'back_default', args?: [] | false, alias?: string  } 
  | { name: 'back_female', args?: [] | false, alias?: string  } 
  | { name: 'back_shiny', args?: [] | false, alias?: string  } 
  | { name: 'back_shiny_female', args?: [] | false, alias?: string  } 
  | { name: 'front_default', args?: [] | false, alias?: string  } 
  | { name: 'front_female', args?: [] | false, alias?: string  } 
  | { name: 'front_shiny', args?: [] | false, alias?: string  } 
  | { name: 'front_shiny_female', args?: [] | false, alias?: string  } 

type SpriteFields =
  | 'back_default'
  | 'back_female'
  | 'back_shiny'
  | 'back_shiny_female'
  | 'front_default'
  | 'front_female'
  | 'front_shiny'
  | 'front_shiny_female'



  

export interface SpriteFieldDetails {
  back_default: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  back_female: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  back_shiny: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  back_shiny_female: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  front_default: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  front_female: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  front_shiny: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  front_shiny_female: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Stat

type StatObject =
  | StatFields
  | { name: 'base_stat', args?: [] | false, alias?: string  } 
  | { name: 'effort', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type StatFields =
  | 'base_stat'
  | 'effort'
  | 'name'
  | 'url'



  

export interface StatFieldDetails {
  base_stat: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  effort: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Type

type TypeObject =
  | TypeFields
  | { name: 'slot', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type TypeFields =
  | 'slot'
  | 'name'
  | 'url'



  

export interface TypeFieldDetails {
  slot: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for PokemonConnection

type PokemonConnectionObject =
  | PokemonConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PokemonConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PokemonConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PokemonConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PokemonEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PokemonConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PokemonEdge[]> | prisma.PokemonEdge[]
  }
  aggregate: {
    type: 'AggregatePokemon'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PokemonConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePokemon> | prisma.AggregatePokemon
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for PokemonEdge

type PokemonEdgeObject =
  | PokemonEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PokemonEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PokemonEdgeFieldDetails {
  node: {
    type: 'Pokemon'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PokemonEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Pokemon> | prisma.Pokemon
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePokemon

type AggregatePokemonObject =
  | AggregatePokemonFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePokemonFields =
  | 'count'



  

export interface AggregatePokemonFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AbilityConnection

type AbilityConnectionObject =
  | AbilityConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type AbilityConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface AbilityConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AbilityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'AbilityEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"AbilityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AbilityEdge[]> | prisma.AbilityEdge[]
  }
  aggregate: {
    type: 'AggregateAbility'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AbilityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateAbility> | prisma.AggregateAbility
  }
}
  

// Types for AbilityEdge

type AbilityEdgeObject =
  | AbilityEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type AbilityEdgeFields =
  | 'node'
  | 'cursor'



  

export interface AbilityEdgeFieldDetails {
  node: {
    type: 'Ability'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AbilityEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Ability> | prisma.Ability
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateAbility

type AggregateAbilityObject =
  | AggregateAbilityFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateAbilityFields =
  | 'count'



  

export interface AggregateAbilityFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for FormConnection

type FormConnectionObject =
  | FormConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type FormConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface FormConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FormConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'FormEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"FormConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FormEdge[]> | prisma.FormEdge[]
  }
  aggregate: {
    type: 'AggregateForm'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FormConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateForm> | prisma.AggregateForm
  }
}
  

// Types for FormEdge

type FormEdgeObject =
  | FormEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type FormEdgeFields =
  | 'node'
  | 'cursor'



  

export interface FormEdgeFieldDetails {
  node: {
    type: 'Form'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FormEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Form> | prisma.Form
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateForm

type AggregateFormObject =
  | AggregateFormFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateFormFields =
  | 'count'



  

export interface AggregateFormFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for GameIndexConnection

type GameIndexConnectionObject =
  | GameIndexConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type GameIndexConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface GameIndexConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GameIndexConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'GameIndexEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"GameIndexConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GameIndexEdge[]> | prisma.GameIndexEdge[]
  }
  aggregate: {
    type: 'AggregateGameIndex'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GameIndexConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateGameIndex> | prisma.AggregateGameIndex
  }
}
  

// Types for GameIndexEdge

type GameIndexEdgeObject =
  | GameIndexEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type GameIndexEdgeFields =
  | 'node'
  | 'cursor'



  

export interface GameIndexEdgeFieldDetails {
  node: {
    type: 'GameIndex'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GameIndexEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GameIndex> | prisma.GameIndex
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateGameIndex

type AggregateGameIndexObject =
  | AggregateGameIndexFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateGameIndexFields =
  | 'count'



  

export interface AggregateGameIndexFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ItemConnection

type ItemConnectionObject =
  | ItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ItemEdge[]> | prisma.ItemEdge[]
  }
  aggregate: {
    type: 'AggregateItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateItem> | prisma.AggregateItem
  }
}
  

// Types for ItemEdge

type ItemEdgeObject =
  | ItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ItemEdgeFieldDetails {
  node: {
    type: 'Item'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Item> | prisma.Item
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateItem

type AggregateItemObject =
  | AggregateItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateItemFields =
  | 'count'



  

export interface AggregateItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MoveConnection

type MoveConnectionObject =
  | MoveConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MoveConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MoveConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MoveConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MoveEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MoveConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MoveEdge[]> | prisma.MoveEdge[]
  }
  aggregate: {
    type: 'AggregateMove'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MoveConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMove> | prisma.AggregateMove
  }
}
  

// Types for MoveEdge

type MoveEdgeObject =
  | MoveEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MoveEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MoveEdgeFieldDetails {
  node: {
    type: 'Move'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MoveEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Move> | prisma.Move
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMove

type AggregateMoveObject =
  | AggregateMoveFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMoveFields =
  | 'count'



  

export interface AggregateMoveFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SpeciesConnection

type SpeciesConnectionObject =
  | SpeciesConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SpeciesConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SpeciesConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpeciesConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SpeciesEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SpeciesConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpeciesEdge[]> | prisma.SpeciesEdge[]
  }
  aggregate: {
    type: 'AggregateSpecies'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpeciesConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSpecies> | prisma.AggregateSpecies
  }
}
  

// Types for SpeciesEdge

type SpeciesEdgeObject =
  | SpeciesEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SpeciesEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SpeciesEdgeFieldDetails {
  node: {
    type: 'Species'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpeciesEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Species> | prisma.Species
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSpecies

type AggregateSpeciesObject =
  | AggregateSpeciesFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSpeciesFields =
  | 'count'



  

export interface AggregateSpeciesFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SpriteConnection

type SpriteConnectionObject =
  | SpriteConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SpriteConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SpriteConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpriteConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SpriteEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SpriteConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpriteEdge[]> | prisma.SpriteEdge[]
  }
  aggregate: {
    type: 'AggregateSprite'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpriteConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSprite> | prisma.AggregateSprite
  }
}
  

// Types for SpriteEdge

type SpriteEdgeObject =
  | SpriteEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SpriteEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SpriteEdgeFieldDetails {
  node: {
    type: 'Sprite'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpriteEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Sprite> | prisma.Sprite
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSprite

type AggregateSpriteObject =
  | AggregateSpriteFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSpriteFields =
  | 'count'



  

export interface AggregateSpriteFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for StatConnection

type StatConnectionObject =
  | StatConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type StatConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface StatConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"StatConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'StatEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"StatConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.StatEdge[]> | prisma.StatEdge[]
  }
  aggregate: {
    type: 'AggregateStat'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"StatConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateStat> | prisma.AggregateStat
  }
}
  

// Types for StatEdge

type StatEdgeObject =
  | StatEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type StatEdgeFields =
  | 'node'
  | 'cursor'



  

export interface StatEdgeFieldDetails {
  node: {
    type: 'Stat'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"StatEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Stat> | prisma.Stat
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateStat

type AggregateStatObject =
  | AggregateStatFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateStatFields =
  | 'count'



  

export interface AggregateStatFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TypeConnection

type TypeConnectionObject =
  | TypeConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type TypeConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface TypeConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TypeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'TypeEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"TypeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TypeEdge[]> | prisma.TypeEdge[]
  }
  aggregate: {
    type: 'AggregateType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TypeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateType> | prisma.AggregateType
  }
}
  

// Types for TypeEdge

type TypeEdgeObject =
  | TypeEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type TypeEdgeFields =
  | 'node'
  | 'cursor'



  

export interface TypeEdgeFieldDetails {
  node: {
    type: 'Type'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TypeEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Type> | prisma.Type
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateType

type AggregateTypeObject =
  | AggregateTypeFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateTypeFields =
  | 'count'



  

export interface AggregateTypeFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createPokemon', args?: MutationCreatePokemonArgs[] | false, alias?: string  } 
  | { name: 'updatePokemon', args?: MutationUpdatePokemonArgs[] | false, alias?: string  } 
  | { name: 'updateManyPokemons', args?: MutationUpdateManyPokemonsArgs[] | false, alias?: string  } 
  | { name: 'upsertPokemon', args?: MutationUpsertPokemonArgs[] | false, alias?: string  } 
  | { name: 'deletePokemon', args?: MutationDeletePokemonArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPokemons', args?: MutationDeleteManyPokemonsArgs[] | false, alias?: string  } 
  | { name: 'createAbility', args?: MutationCreateAbilityArgs[] | false, alias?: string  } 
  | { name: 'updateManyAbilities', args?: MutationUpdateManyAbilitiesArgs[] | false, alias?: string  } 
  | { name: 'deleteManyAbilities', args?: MutationDeleteManyAbilitiesArgs[] | false, alias?: string  } 
  | { name: 'createForm', args?: MutationCreateFormArgs[] | false, alias?: string  } 
  | { name: 'updateManyForms', args?: MutationUpdateManyFormsArgs[] | false, alias?: string  } 
  | { name: 'deleteManyForms', args?: MutationDeleteManyFormsArgs[] | false, alias?: string  } 
  | { name: 'createGameIndex', args?: MutationCreateGameIndexArgs[] | false, alias?: string  } 
  | { name: 'updateManyGameIndexes', args?: MutationUpdateManyGameIndexesArgs[] | false, alias?: string  } 
  | { name: 'deleteManyGameIndexes', args?: MutationDeleteManyGameIndexesArgs[] | false, alias?: string  } 
  | { name: 'createItem', args?: MutationCreateItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyItems', args?: MutationUpdateManyItemsArgs[] | false, alias?: string  } 
  | { name: 'deleteManyItems', args?: MutationDeleteManyItemsArgs[] | false, alias?: string  } 
  | { name: 'createMove', args?: MutationCreateMoveArgs[] | false, alias?: string  } 
  | { name: 'updateManyMoves', args?: MutationUpdateManyMovesArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMoves', args?: MutationDeleteManyMovesArgs[] | false, alias?: string  } 
  | { name: 'createSpecies', args?: MutationCreateSpeciesArgs[] | false, alias?: string  } 
  | { name: 'updateManySpecieses', args?: MutationUpdateManySpeciesesArgs[] | false, alias?: string  } 
  | { name: 'deleteManySpecieses', args?: MutationDeleteManySpeciesesArgs[] | false, alias?: string  } 
  | { name: 'createSprite', args?: MutationCreateSpriteArgs[] | false, alias?: string  } 
  | { name: 'updateManySprites', args?: MutationUpdateManySpritesArgs[] | false, alias?: string  } 
  | { name: 'deleteManySprites', args?: MutationDeleteManySpritesArgs[] | false, alias?: string  } 
  | { name: 'createStat', args?: MutationCreateStatArgs[] | false, alias?: string  } 
  | { name: 'updateManyStats', args?: MutationUpdateManyStatsArgs[] | false, alias?: string  } 
  | { name: 'deleteManyStats', args?: MutationDeleteManyStatsArgs[] | false, alias?: string  } 
  | { name: 'createType', args?: MutationCreateTypeArgs[] | false, alias?: string  } 
  | { name: 'updateManyTypes', args?: MutationUpdateManyTypesArgs[] | false, alias?: string  } 
  | { name: 'deleteManyTypes', args?: MutationDeleteManyTypesArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createPokemon'
  | 'updatePokemon'
  | 'updateManyPokemons'
  | 'upsertPokemon'
  | 'deletePokemon'
  | 'deleteManyPokemons'
  | 'createAbility'
  | 'updateManyAbilities'
  | 'deleteManyAbilities'
  | 'createForm'
  | 'updateManyForms'
  | 'deleteManyForms'
  | 'createGameIndex'
  | 'updateManyGameIndexes'
  | 'deleteManyGameIndexes'
  | 'createItem'
  | 'updateManyItems'
  | 'deleteManyItems'
  | 'createMove'
  | 'updateManyMoves'
  | 'deleteManyMoves'
  | 'createSpecies'
  | 'updateManySpecieses'
  | 'deleteManySpecieses'
  | 'createSprite'
  | 'updateManySprites'
  | 'deleteManySprites'
  | 'createStat'
  | 'updateManyStats'
  | 'deleteManyStats'
  | 'createType'
  | 'updateManyTypes'
  | 'deleteManyTypes'


type MutationCreatePokemonArgs =
  | 'data'
type MutationUpdatePokemonArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPokemonsArgs =
  | 'data'
  | 'where'
type MutationUpsertPokemonArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePokemonArgs =
  | 'where'
type MutationDeleteManyPokemonsArgs =
  | 'where'
type MutationCreateAbilityArgs =
  | 'data'
type MutationUpdateManyAbilitiesArgs =
  | 'data'
  | 'where'
type MutationDeleteManyAbilitiesArgs =
  | 'where'
type MutationCreateFormArgs =
  | 'data'
type MutationUpdateManyFormsArgs =
  | 'data'
  | 'where'
type MutationDeleteManyFormsArgs =
  | 'where'
type MutationCreateGameIndexArgs =
  | 'data'
type MutationUpdateManyGameIndexesArgs =
  | 'data'
  | 'where'
type MutationDeleteManyGameIndexesArgs =
  | 'where'
type MutationCreateItemArgs =
  | 'data'
type MutationUpdateManyItemsArgs =
  | 'data'
  | 'where'
type MutationDeleteManyItemsArgs =
  | 'where'
type MutationCreateMoveArgs =
  | 'data'
type MutationUpdateManyMovesArgs =
  | 'data'
  | 'where'
type MutationDeleteManyMovesArgs =
  | 'where'
type MutationCreateSpeciesArgs =
  | 'data'
type MutationUpdateManySpeciesesArgs =
  | 'data'
  | 'where'
type MutationDeleteManySpeciesesArgs =
  | 'where'
type MutationCreateSpriteArgs =
  | 'data'
type MutationUpdateManySpritesArgs =
  | 'data'
  | 'where'
type MutationDeleteManySpritesArgs =
  | 'where'
type MutationCreateStatArgs =
  | 'data'
type MutationUpdateManyStatsArgs =
  | 'data'
  | 'where'
type MutationDeleteManyStatsArgs =
  | 'where'
type MutationCreateTypeArgs =
  | 'data'
type MutationUpdateManyTypesArgs =
  | 'data'
  | 'where'
type MutationDeleteManyTypesArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createPokemon: {
    type: 'Pokemon'
    args: Record<MutationCreatePokemonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PokemonCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Pokemon> | prisma.Pokemon
  }
  updatePokemon: {
    type: 'Pokemon'
    args: Record<MutationUpdatePokemonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PokemonUpdateInput, where: PokemonWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Pokemon | null> | prisma.Pokemon | null
  }
  updateManyPokemons: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPokemonsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PokemonUpdateManyMutationInput, where?: PokemonWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPokemon: {
    type: 'Pokemon'
    args: Record<MutationUpsertPokemonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PokemonWhereUniqueInput, create: PokemonCreateInput, update: PokemonUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Pokemon> | prisma.Pokemon
  }
  deletePokemon: {
    type: 'Pokemon'
    args: Record<MutationDeletePokemonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PokemonWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Pokemon | null> | prisma.Pokemon | null
  }
  deleteManyPokemons: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPokemonsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PokemonWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createAbility: {
    type: 'Ability'
    args: Record<MutationCreateAbilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AbilityCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Ability> | prisma.Ability
  }
  updateManyAbilities: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyAbilitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AbilityUpdateManyMutationInput, where?: AbilityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  deleteManyAbilities: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyAbilitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: AbilityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createForm: {
    type: 'Form'
    args: Record<MutationCreateFormArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: FormCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Form> | prisma.Form
  }
  updateManyForms: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyFormsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: FormUpdateManyMutationInput, where?: FormWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  deleteManyForms: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyFormsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: FormWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createGameIndex: {
    type: 'GameIndex'
    args: Record<MutationCreateGameIndexArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: GameIndexCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GameIndex> | prisma.GameIndex
  }
  updateManyGameIndexes: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyGameIndexesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: GameIndexUpdateManyMutationInput, where?: GameIndexWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  deleteManyGameIndexes: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyGameIndexesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: GameIndexWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createItem: {
    type: 'Item'
    args: Record<MutationCreateItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Item> | prisma.Item
  }
  updateManyItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ItemUpdateManyMutationInput, where?: ItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  deleteManyItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMove: {
    type: 'Move'
    args: Record<MutationCreateMoveArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MoveCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Move> | prisma.Move
  }
  updateManyMoves: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMovesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MoveUpdateManyMutationInput, where?: MoveWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  deleteManyMoves: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMovesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MoveWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSpecies: {
    type: 'Species'
    args: Record<MutationCreateSpeciesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SpeciesCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Species> | prisma.Species
  }
  updateManySpecieses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySpeciesesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SpeciesUpdateManyMutationInput, where?: SpeciesWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  deleteManySpecieses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySpeciesesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SpeciesWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSprite: {
    type: 'Sprite'
    args: Record<MutationCreateSpriteArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SpriteCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Sprite> | prisma.Sprite
  }
  updateManySprites: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySpritesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SpriteUpdateManyMutationInput, where?: SpriteWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  deleteManySprites: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySpritesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SpriteWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createStat: {
    type: 'Stat'
    args: Record<MutationCreateStatArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: StatCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Stat> | prisma.Stat
  }
  updateManyStats: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyStatsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: StatUpdateManyMutationInput, where?: StatWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  deleteManyStats: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyStatsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: StatWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createType: {
    type: 'Type'
    args: Record<MutationCreateTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TypeCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Type> | prisma.Type
  }
  updateManyTypes: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyTypesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TypeUpdateManyMutationInput, where?: TypeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  deleteManyTypes: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyTypesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: TypeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'pokemon', args?: SubscriptionPokemonArgs[] | false, alias?: string  } 
  | { name: 'ability', args?: SubscriptionAbilityArgs[] | false, alias?: string  } 
  | { name: 'form', args?: SubscriptionFormArgs[] | false, alias?: string  } 
  | { name: 'gameIndex', args?: SubscriptionGameIndexArgs[] | false, alias?: string  } 
  | { name: 'item', args?: SubscriptionItemArgs[] | false, alias?: string  } 
  | { name: 'move', args?: SubscriptionMoveArgs[] | false, alias?: string  } 
  | { name: 'species', args?: SubscriptionSpeciesArgs[] | false, alias?: string  } 
  | { name: 'sprite', args?: SubscriptionSpriteArgs[] | false, alias?: string  } 
  | { name: 'stat', args?: SubscriptionStatArgs[] | false, alias?: string  } 
  | { name: 'type', args?: SubscriptionTypeArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'pokemon'
  | 'ability'
  | 'form'
  | 'gameIndex'
  | 'item'
  | 'move'
  | 'species'
  | 'sprite'
  | 'stat'
  | 'type'


type SubscriptionPokemonArgs =
  | 'where'
type SubscriptionAbilityArgs =
  | 'where'
type SubscriptionFormArgs =
  | 'where'
type SubscriptionGameIndexArgs =
  | 'where'
type SubscriptionItemArgs =
  | 'where'
type SubscriptionMoveArgs =
  | 'where'
type SubscriptionSpeciesArgs =
  | 'where'
type SubscriptionSpriteArgs =
  | 'where'
type SubscriptionStatArgs =
  | 'where'
type SubscriptionTypeArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  pokemon: {
    type: 'PokemonSubscriptionPayload'
    args: Record<SubscriptionPokemonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PokemonSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PokemonSubscriptionPayload | null> | prisma.PokemonSubscriptionPayload | null
  }
  ability: {
    type: 'AbilitySubscriptionPayload'
    args: Record<SubscriptionAbilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: AbilitySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AbilitySubscriptionPayload | null> | prisma.AbilitySubscriptionPayload | null
  }
  form: {
    type: 'FormSubscriptionPayload'
    args: Record<SubscriptionFormArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: FormSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FormSubscriptionPayload | null> | prisma.FormSubscriptionPayload | null
  }
  gameIndex: {
    type: 'GameIndexSubscriptionPayload'
    args: Record<SubscriptionGameIndexArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: GameIndexSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GameIndexSubscriptionPayload | null> | prisma.GameIndexSubscriptionPayload | null
  }
  item: {
    type: 'ItemSubscriptionPayload'
    args: Record<SubscriptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ItemSubscriptionPayload | null> | prisma.ItemSubscriptionPayload | null
  }
  move: {
    type: 'MoveSubscriptionPayload'
    args: Record<SubscriptionMoveArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MoveSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MoveSubscriptionPayload | null> | prisma.MoveSubscriptionPayload | null
  }
  species: {
    type: 'SpeciesSubscriptionPayload'
    args: Record<SubscriptionSpeciesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SpeciesSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpeciesSubscriptionPayload | null> | prisma.SpeciesSubscriptionPayload | null
  }
  sprite: {
    type: 'SpriteSubscriptionPayload'
    args: Record<SubscriptionSpriteArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SpriteSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpriteSubscriptionPayload | null> | prisma.SpriteSubscriptionPayload | null
  }
  stat: {
    type: 'StatSubscriptionPayload'
    args: Record<SubscriptionStatArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: StatSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.StatSubscriptionPayload | null> | prisma.StatSubscriptionPayload | null
  }
  type: {
    type: 'TypeSubscriptionPayload'
    args: Record<SubscriptionTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: TypeSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TypeSubscriptionPayload | null> | prisma.TypeSubscriptionPayload | null
  }
}
  

// Types for PokemonSubscriptionPayload

type PokemonSubscriptionPayloadObject =
  | PokemonSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PokemonSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PokemonSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PokemonSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Pokemon'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PokemonSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Pokemon | null> | prisma.Pokemon | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PokemonPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PokemonSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PokemonPreviousValues | null> | prisma.PokemonPreviousValues | null
  }
}
  

// Types for PokemonPreviousValues

type PokemonPreviousValuesObject =
  | PokemonPreviousValuesFields
  | { name: 'base_experience', args?: [] | false, alias?: string  } 
  | { name: 'height', args?: [] | false, alias?: string  } 
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'is_default', args?: [] | false, alias?: string  } 
  | { name: 'location_area_encounters', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'order', args?: [] | false, alias?: string  } 
  | { name: 'weight', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type PokemonPreviousValuesFields =
  | 'base_experience'
  | 'height'
  | 'id'
  | 'is_default'
  | 'location_area_encounters'
  | 'name'
  | 'order'
  | 'weight'
  | 'url'



  

export interface PokemonPreviousValuesFieldDetails {
  base_experience: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  height: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  is_default: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  location_area_encounters: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  order: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  weight: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for AbilitySubscriptionPayload

type AbilitySubscriptionPayloadObject =
  | AbilitySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type AbilitySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface AbilitySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AbilitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Ability'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AbilitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Ability | null> | prisma.Ability | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'AbilityPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AbilitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AbilityPreviousValues | null> | prisma.AbilityPreviousValues | null
  }
}
  

// Types for AbilityPreviousValues

type AbilityPreviousValuesObject =
  | AbilityPreviousValuesFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type AbilityPreviousValuesFields =
  | 'name'
  | 'url'



  

export interface AbilityPreviousValuesFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for FormSubscriptionPayload

type FormSubscriptionPayloadObject =
  | FormSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type FormSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface FormSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FormSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Form'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"FormSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Form | null> | prisma.Form | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'FormPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"FormSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FormPreviousValues | null> | prisma.FormPreviousValues | null
  }
}
  

// Types for FormPreviousValues

type FormPreviousValuesObject =
  | FormPreviousValuesFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type FormPreviousValuesFields =
  | 'name'
  | 'url'



  

export interface FormPreviousValuesFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for GameIndexSubscriptionPayload

type GameIndexSubscriptionPayloadObject =
  | GameIndexSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type GameIndexSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface GameIndexSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GameIndexSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'GameIndex'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"GameIndexSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GameIndex | null> | prisma.GameIndex | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'GameIndexPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"GameIndexSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GameIndexPreviousValues | null> | prisma.GameIndexPreviousValues | null
  }
}
  

// Types for GameIndexPreviousValues

type GameIndexPreviousValuesObject =
  | GameIndexPreviousValuesFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type GameIndexPreviousValuesFields =
  | 'name'
  | 'url'



  

export interface GameIndexPreviousValuesFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for ItemSubscriptionPayload

type ItemSubscriptionPayloadObject =
  | ItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Item'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Item | null> | prisma.Item | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ItemPreviousValues | null> | prisma.ItemPreviousValues | null
  }
}
  

// Types for ItemPreviousValues

type ItemPreviousValuesObject =
  | ItemPreviousValuesFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type ItemPreviousValuesFields =
  | 'name'
  | 'url'



  

export interface ItemPreviousValuesFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for MoveSubscriptionPayload

type MoveSubscriptionPayloadObject =
  | MoveSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MoveSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MoveSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MoveSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Move'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MoveSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Move | null> | prisma.Move | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MovePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MoveSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MovePreviousValues | null> | prisma.MovePreviousValues | null
  }
}
  

// Types for MovePreviousValues

type MovePreviousValuesObject =
  | MovePreviousValuesFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type MovePreviousValuesFields =
  | 'name'
  | 'url'



  

export interface MovePreviousValuesFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for SpeciesSubscriptionPayload

type SpeciesSubscriptionPayloadObject =
  | SpeciesSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SpeciesSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SpeciesSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpeciesSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Species'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SpeciesSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Species | null> | prisma.Species | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SpeciesPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SpeciesSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpeciesPreviousValues | null> | prisma.SpeciesPreviousValues | null
  }
}
  

// Types for SpeciesPreviousValues

type SpeciesPreviousValuesObject =
  | SpeciesPreviousValuesFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type SpeciesPreviousValuesFields =
  | 'name'
  | 'url'



  

export interface SpeciesPreviousValuesFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for SpriteSubscriptionPayload

type SpriteSubscriptionPayloadObject =
  | SpriteSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SpriteSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SpriteSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpriteSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Sprite'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SpriteSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Sprite | null> | prisma.Sprite | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SpritePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SpriteSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpritePreviousValues | null> | prisma.SpritePreviousValues | null
  }
}
  

// Types for SpritePreviousValues

type SpritePreviousValuesObject =
  | SpritePreviousValuesFields
  | { name: 'back_default', args?: [] | false, alias?: string  } 
  | { name: 'back_female', args?: [] | false, alias?: string  } 
  | { name: 'back_shiny', args?: [] | false, alias?: string  } 
  | { name: 'back_shiny_female', args?: [] | false, alias?: string  } 
  | { name: 'front_default', args?: [] | false, alias?: string  } 
  | { name: 'front_female', args?: [] | false, alias?: string  } 
  | { name: 'front_shiny', args?: [] | false, alias?: string  } 
  | { name: 'front_shiny_female', args?: [] | false, alias?: string  } 

type SpritePreviousValuesFields =
  | 'back_default'
  | 'back_female'
  | 'back_shiny'
  | 'back_shiny_female'
  | 'front_default'
  | 'front_female'
  | 'front_shiny'
  | 'front_shiny_female'



  

export interface SpritePreviousValuesFieldDetails {
  back_default: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  back_female: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  back_shiny: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  back_shiny_female: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  front_default: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  front_female: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  front_shiny: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  front_shiny_female: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for StatSubscriptionPayload

type StatSubscriptionPayloadObject =
  | StatSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type StatSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface StatSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"StatSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Stat'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"StatSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Stat | null> | prisma.Stat | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'StatPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"StatSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.StatPreviousValues | null> | prisma.StatPreviousValues | null
  }
}
  

// Types for StatPreviousValues

type StatPreviousValuesObject =
  | StatPreviousValuesFields
  | { name: 'base_stat', args?: [] | false, alias?: string  } 
  | { name: 'effort', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type StatPreviousValuesFields =
  | 'base_stat'
  | 'effort'
  | 'name'
  | 'url'



  

export interface StatPreviousValuesFieldDetails {
  base_stat: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  effort: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for TypeSubscriptionPayload

type TypeSubscriptionPayloadObject =
  | TypeSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type TypeSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface TypeSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TypeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Type'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TypeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Type | null> | prisma.Type | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'TypePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TypeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TypePreviousValues | null> | prisma.TypePreviousValues | null
  }
}
  

// Types for TypePreviousValues

type TypePreviousValuesObject =
  | TypePreviousValuesFields
  | { name: 'slot', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type TypePreviousValuesFields =
  | 'slot'
  | 'name'
  | 'url'



  

export interface TypePreviousValuesFieldDetails {
  slot: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  


export interface PokemonWhereUniqueInput {
  id?: string | null
}
export type PokemonWhereUniqueInputInputObject =
  | Extract<keyof PokemonWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface AbilityWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: AbilityWhereInput[]
  OR?: AbilityWhereInput[]
  NOT?: AbilityWhereInput[]
}
export type AbilityWhereInputInputObject =
  | Extract<keyof AbilityWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface FormWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: FormWhereInput[]
  OR?: FormWhereInput[]
  NOT?: FormWhereInput[]
}
export type FormWhereInputInputObject =
  | Extract<keyof FormWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface GameIndexWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: GameIndexWhereInput[]
  OR?: GameIndexWhereInput[]
  NOT?: GameIndexWhereInput[]
}
export type GameIndexWhereInputInputObject =
  | Extract<keyof GameIndexWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ItemWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: ItemWhereInput[]
  OR?: ItemWhereInput[]
  NOT?: ItemWhereInput[]
}
export type ItemWhereInputInputObject =
  | Extract<keyof ItemWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MoveWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: MoveWhereInput[]
  OR?: MoveWhereInput[]
  NOT?: MoveWhereInput[]
}
export type MoveWhereInputInputObject =
  | Extract<keyof MoveWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SpeciesWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: SpeciesWhereInput[]
  OR?: SpeciesWhereInput[]
  NOT?: SpeciesWhereInput[]
}
export type SpeciesWhereInputInputObject =
  | Extract<keyof SpeciesWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SpriteWhereInput {
  back_default?: string | null
  back_default_not?: string | null
  back_default_in?: string[]
  back_default_not_in?: string[]
  back_default_lt?: string | null
  back_default_lte?: string | null
  back_default_gt?: string | null
  back_default_gte?: string | null
  back_default_contains?: string | null
  back_default_not_contains?: string | null
  back_default_starts_with?: string | null
  back_default_not_starts_with?: string | null
  back_default_ends_with?: string | null
  back_default_not_ends_with?: string | null
  back_female?: string | null
  back_female_not?: string | null
  back_female_in?: string[]
  back_female_not_in?: string[]
  back_female_lt?: string | null
  back_female_lte?: string | null
  back_female_gt?: string | null
  back_female_gte?: string | null
  back_female_contains?: string | null
  back_female_not_contains?: string | null
  back_female_starts_with?: string | null
  back_female_not_starts_with?: string | null
  back_female_ends_with?: string | null
  back_female_not_ends_with?: string | null
  back_shiny?: string | null
  back_shiny_not?: string | null
  back_shiny_in?: string[]
  back_shiny_not_in?: string[]
  back_shiny_lt?: string | null
  back_shiny_lte?: string | null
  back_shiny_gt?: string | null
  back_shiny_gte?: string | null
  back_shiny_contains?: string | null
  back_shiny_not_contains?: string | null
  back_shiny_starts_with?: string | null
  back_shiny_not_starts_with?: string | null
  back_shiny_ends_with?: string | null
  back_shiny_not_ends_with?: string | null
  back_shiny_female?: string | null
  back_shiny_female_not?: string | null
  back_shiny_female_in?: string[]
  back_shiny_female_not_in?: string[]
  back_shiny_female_lt?: string | null
  back_shiny_female_lte?: string | null
  back_shiny_female_gt?: string | null
  back_shiny_female_gte?: string | null
  back_shiny_female_contains?: string | null
  back_shiny_female_not_contains?: string | null
  back_shiny_female_starts_with?: string | null
  back_shiny_female_not_starts_with?: string | null
  back_shiny_female_ends_with?: string | null
  back_shiny_female_not_ends_with?: string | null
  front_default?: string | null
  front_default_not?: string | null
  front_default_in?: string[]
  front_default_not_in?: string[]
  front_default_lt?: string | null
  front_default_lte?: string | null
  front_default_gt?: string | null
  front_default_gte?: string | null
  front_default_contains?: string | null
  front_default_not_contains?: string | null
  front_default_starts_with?: string | null
  front_default_not_starts_with?: string | null
  front_default_ends_with?: string | null
  front_default_not_ends_with?: string | null
  front_female?: string | null
  front_female_not?: string | null
  front_female_in?: string[]
  front_female_not_in?: string[]
  front_female_lt?: string | null
  front_female_lte?: string | null
  front_female_gt?: string | null
  front_female_gte?: string | null
  front_female_contains?: string | null
  front_female_not_contains?: string | null
  front_female_starts_with?: string | null
  front_female_not_starts_with?: string | null
  front_female_ends_with?: string | null
  front_female_not_ends_with?: string | null
  front_shiny?: string | null
  front_shiny_not?: string | null
  front_shiny_in?: string[]
  front_shiny_not_in?: string[]
  front_shiny_lt?: string | null
  front_shiny_lte?: string | null
  front_shiny_gt?: string | null
  front_shiny_gte?: string | null
  front_shiny_contains?: string | null
  front_shiny_not_contains?: string | null
  front_shiny_starts_with?: string | null
  front_shiny_not_starts_with?: string | null
  front_shiny_ends_with?: string | null
  front_shiny_not_ends_with?: string | null
  front_shiny_female?: string | null
  front_shiny_female_not?: string | null
  front_shiny_female_in?: string[]
  front_shiny_female_not_in?: string[]
  front_shiny_female_lt?: string | null
  front_shiny_female_lte?: string | null
  front_shiny_female_gt?: string | null
  front_shiny_female_gte?: string | null
  front_shiny_female_contains?: string | null
  front_shiny_female_not_contains?: string | null
  front_shiny_female_starts_with?: string | null
  front_shiny_female_not_starts_with?: string | null
  front_shiny_female_ends_with?: string | null
  front_shiny_female_not_ends_with?: string | null
  AND?: SpriteWhereInput[]
  OR?: SpriteWhereInput[]
  NOT?: SpriteWhereInput[]
}
export type SpriteWhereInputInputObject =
  | Extract<keyof SpriteWhereInput, string>
  | { name: 'back_default', alias?: string  } 
  | { name: 'back_default_not', alias?: string  } 
  | { name: 'back_default_in', alias?: string  } 
  | { name: 'back_default_not_in', alias?: string  } 
  | { name: 'back_default_lt', alias?: string  } 
  | { name: 'back_default_lte', alias?: string  } 
  | { name: 'back_default_gt', alias?: string  } 
  | { name: 'back_default_gte', alias?: string  } 
  | { name: 'back_default_contains', alias?: string  } 
  | { name: 'back_default_not_contains', alias?: string  } 
  | { name: 'back_default_starts_with', alias?: string  } 
  | { name: 'back_default_not_starts_with', alias?: string  } 
  | { name: 'back_default_ends_with', alias?: string  } 
  | { name: 'back_default_not_ends_with', alias?: string  } 
  | { name: 'back_female', alias?: string  } 
  | { name: 'back_female_not', alias?: string  } 
  | { name: 'back_female_in', alias?: string  } 
  | { name: 'back_female_not_in', alias?: string  } 
  | { name: 'back_female_lt', alias?: string  } 
  | { name: 'back_female_lte', alias?: string  } 
  | { name: 'back_female_gt', alias?: string  } 
  | { name: 'back_female_gte', alias?: string  } 
  | { name: 'back_female_contains', alias?: string  } 
  | { name: 'back_female_not_contains', alias?: string  } 
  | { name: 'back_female_starts_with', alias?: string  } 
  | { name: 'back_female_not_starts_with', alias?: string  } 
  | { name: 'back_female_ends_with', alias?: string  } 
  | { name: 'back_female_not_ends_with', alias?: string  } 
  | { name: 'back_shiny', alias?: string  } 
  | { name: 'back_shiny_not', alias?: string  } 
  | { name: 'back_shiny_in', alias?: string  } 
  | { name: 'back_shiny_not_in', alias?: string  } 
  | { name: 'back_shiny_lt', alias?: string  } 
  | { name: 'back_shiny_lte', alias?: string  } 
  | { name: 'back_shiny_gt', alias?: string  } 
  | { name: 'back_shiny_gte', alias?: string  } 
  | { name: 'back_shiny_contains', alias?: string  } 
  | { name: 'back_shiny_not_contains', alias?: string  } 
  | { name: 'back_shiny_starts_with', alias?: string  } 
  | { name: 'back_shiny_not_starts_with', alias?: string  } 
  | { name: 'back_shiny_ends_with', alias?: string  } 
  | { name: 'back_shiny_not_ends_with', alias?: string  } 
  | { name: 'back_shiny_female', alias?: string  } 
  | { name: 'back_shiny_female_not', alias?: string  } 
  | { name: 'back_shiny_female_in', alias?: string  } 
  | { name: 'back_shiny_female_not_in', alias?: string  } 
  | { name: 'back_shiny_female_lt', alias?: string  } 
  | { name: 'back_shiny_female_lte', alias?: string  } 
  | { name: 'back_shiny_female_gt', alias?: string  } 
  | { name: 'back_shiny_female_gte', alias?: string  } 
  | { name: 'back_shiny_female_contains', alias?: string  } 
  | { name: 'back_shiny_female_not_contains', alias?: string  } 
  | { name: 'back_shiny_female_starts_with', alias?: string  } 
  | { name: 'back_shiny_female_not_starts_with', alias?: string  } 
  | { name: 'back_shiny_female_ends_with', alias?: string  } 
  | { name: 'back_shiny_female_not_ends_with', alias?: string  } 
  | { name: 'front_default', alias?: string  } 
  | { name: 'front_default_not', alias?: string  } 
  | { name: 'front_default_in', alias?: string  } 
  | { name: 'front_default_not_in', alias?: string  } 
  | { name: 'front_default_lt', alias?: string  } 
  | { name: 'front_default_lte', alias?: string  } 
  | { name: 'front_default_gt', alias?: string  } 
  | { name: 'front_default_gte', alias?: string  } 
  | { name: 'front_default_contains', alias?: string  } 
  | { name: 'front_default_not_contains', alias?: string  } 
  | { name: 'front_default_starts_with', alias?: string  } 
  | { name: 'front_default_not_starts_with', alias?: string  } 
  | { name: 'front_default_ends_with', alias?: string  } 
  | { name: 'front_default_not_ends_with', alias?: string  } 
  | { name: 'front_female', alias?: string  } 
  | { name: 'front_female_not', alias?: string  } 
  | { name: 'front_female_in', alias?: string  } 
  | { name: 'front_female_not_in', alias?: string  } 
  | { name: 'front_female_lt', alias?: string  } 
  | { name: 'front_female_lte', alias?: string  } 
  | { name: 'front_female_gt', alias?: string  } 
  | { name: 'front_female_gte', alias?: string  } 
  | { name: 'front_female_contains', alias?: string  } 
  | { name: 'front_female_not_contains', alias?: string  } 
  | { name: 'front_female_starts_with', alias?: string  } 
  | { name: 'front_female_not_starts_with', alias?: string  } 
  | { name: 'front_female_ends_with', alias?: string  } 
  | { name: 'front_female_not_ends_with', alias?: string  } 
  | { name: 'front_shiny', alias?: string  } 
  | { name: 'front_shiny_not', alias?: string  } 
  | { name: 'front_shiny_in', alias?: string  } 
  | { name: 'front_shiny_not_in', alias?: string  } 
  | { name: 'front_shiny_lt', alias?: string  } 
  | { name: 'front_shiny_lte', alias?: string  } 
  | { name: 'front_shiny_gt', alias?: string  } 
  | { name: 'front_shiny_gte', alias?: string  } 
  | { name: 'front_shiny_contains', alias?: string  } 
  | { name: 'front_shiny_not_contains', alias?: string  } 
  | { name: 'front_shiny_starts_with', alias?: string  } 
  | { name: 'front_shiny_not_starts_with', alias?: string  } 
  | { name: 'front_shiny_ends_with', alias?: string  } 
  | { name: 'front_shiny_not_ends_with', alias?: string  } 
  | { name: 'front_shiny_female', alias?: string  } 
  | { name: 'front_shiny_female_not', alias?: string  } 
  | { name: 'front_shiny_female_in', alias?: string  } 
  | { name: 'front_shiny_female_not_in', alias?: string  } 
  | { name: 'front_shiny_female_lt', alias?: string  } 
  | { name: 'front_shiny_female_lte', alias?: string  } 
  | { name: 'front_shiny_female_gt', alias?: string  } 
  | { name: 'front_shiny_female_gte', alias?: string  } 
  | { name: 'front_shiny_female_contains', alias?: string  } 
  | { name: 'front_shiny_female_not_contains', alias?: string  } 
  | { name: 'front_shiny_female_starts_with', alias?: string  } 
  | { name: 'front_shiny_female_not_starts_with', alias?: string  } 
  | { name: 'front_shiny_female_ends_with', alias?: string  } 
  | { name: 'front_shiny_female_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface StatWhereInput {
  base_stat?: number | null
  base_stat_not?: number | null
  base_stat_in?: number[]
  base_stat_not_in?: number[]
  base_stat_lt?: number | null
  base_stat_lte?: number | null
  base_stat_gt?: number | null
  base_stat_gte?: number | null
  effort?: number | null
  effort_not?: number | null
  effort_in?: number[]
  effort_not_in?: number[]
  effort_lt?: number | null
  effort_lte?: number | null
  effort_gt?: number | null
  effort_gte?: number | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: StatWhereInput[]
  OR?: StatWhereInput[]
  NOT?: StatWhereInput[]
}
export type StatWhereInputInputObject =
  | Extract<keyof StatWhereInput, string>
  | { name: 'base_stat', alias?: string  } 
  | { name: 'base_stat_not', alias?: string  } 
  | { name: 'base_stat_in', alias?: string  } 
  | { name: 'base_stat_not_in', alias?: string  } 
  | { name: 'base_stat_lt', alias?: string  } 
  | { name: 'base_stat_lte', alias?: string  } 
  | { name: 'base_stat_gt', alias?: string  } 
  | { name: 'base_stat_gte', alias?: string  } 
  | { name: 'effort', alias?: string  } 
  | { name: 'effort_not', alias?: string  } 
  | { name: 'effort_in', alias?: string  } 
  | { name: 'effort_not_in', alias?: string  } 
  | { name: 'effort_lt', alias?: string  } 
  | { name: 'effort_lte', alias?: string  } 
  | { name: 'effort_gt', alias?: string  } 
  | { name: 'effort_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TypeWhereInput {
  slot?: number | null
  slot_not?: number | null
  slot_in?: number[]
  slot_not_in?: number[]
  slot_lt?: number | null
  slot_lte?: number | null
  slot_gt?: number | null
  slot_gte?: number | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: TypeWhereInput[]
  OR?: TypeWhereInput[]
  NOT?: TypeWhereInput[]
}
export type TypeWhereInputInputObject =
  | Extract<keyof TypeWhereInput, string>
  | { name: 'slot', alias?: string  } 
  | { name: 'slot_not', alias?: string  } 
  | { name: 'slot_in', alias?: string  } 
  | { name: 'slot_not_in', alias?: string  } 
  | { name: 'slot_lt', alias?: string  } 
  | { name: 'slot_lte', alias?: string  } 
  | { name: 'slot_gt', alias?: string  } 
  | { name: 'slot_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PokemonWhereInput {
  abilities_every?: AbilityWhereInput | null
  abilities_some?: AbilityWhereInput | null
  abilities_none?: AbilityWhereInput | null
  base_experience?: number | null
  base_experience_not?: number | null
  base_experience_in?: number[]
  base_experience_not_in?: number[]
  base_experience_lt?: number | null
  base_experience_lte?: number | null
  base_experience_gt?: number | null
  base_experience_gte?: number | null
  forms_every?: FormWhereInput | null
  forms_some?: FormWhereInput | null
  forms_none?: FormWhereInput | null
  game_indices_every?: GameIndexWhereInput | null
  game_indices_some?: GameIndexWhereInput | null
  game_indices_none?: GameIndexWhereInput | null
  held_items_every?: ItemWhereInput | null
  held_items_some?: ItemWhereInput | null
  held_items_none?: ItemWhereInput | null
  height?: number | null
  height_not?: number | null
  height_in?: number[]
  height_not_in?: number[]
  height_lt?: number | null
  height_lte?: number | null
  height_gt?: number | null
  height_gte?: number | null
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  is_default?: boolean | null
  is_default_not?: boolean | null
  location_area_encounters?: string | null
  location_area_encounters_not?: string | null
  location_area_encounters_in?: string[]
  location_area_encounters_not_in?: string[]
  location_area_encounters_lt?: string | null
  location_area_encounters_lte?: string | null
  location_area_encounters_gt?: string | null
  location_area_encounters_gte?: string | null
  location_area_encounters_contains?: string | null
  location_area_encounters_not_contains?: string | null
  location_area_encounters_starts_with?: string | null
  location_area_encounters_not_starts_with?: string | null
  location_area_encounters_ends_with?: string | null
  location_area_encounters_not_ends_with?: string | null
  moves_every?: MoveWhereInput | null
  moves_some?: MoveWhereInput | null
  moves_none?: MoveWhereInput | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  order?: number | null
  order_not?: number | null
  order_in?: number[]
  order_not_in?: number[]
  order_lt?: number | null
  order_lte?: number | null
  order_gt?: number | null
  order_gte?: number | null
  species_every?: SpeciesWhereInput | null
  species_some?: SpeciesWhereInput | null
  species_none?: SpeciesWhereInput | null
  sprites_every?: SpriteWhereInput | null
  sprites_some?: SpriteWhereInput | null
  sprites_none?: SpriteWhereInput | null
  stats_every?: StatWhereInput | null
  stats_some?: StatWhereInput | null
  stats_none?: StatWhereInput | null
  types_every?: TypeWhereInput | null
  types_some?: TypeWhereInput | null
  types_none?: TypeWhereInput | null
  weight?: number | null
  weight_not?: number | null
  weight_in?: number[]
  weight_not_in?: number[]
  weight_lt?: number | null
  weight_lte?: number | null
  weight_gt?: number | null
  weight_gte?: number | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: PokemonWhereInput[]
  OR?: PokemonWhereInput[]
  NOT?: PokemonWhereInput[]
}
export type PokemonWhereInputInputObject =
  | Extract<keyof PokemonWhereInput, string>
  | { name: 'abilities_every', alias?: string  } 
  | { name: 'abilities_some', alias?: string  } 
  | { name: 'abilities_none', alias?: string  } 
  | { name: 'base_experience', alias?: string  } 
  | { name: 'base_experience_not', alias?: string  } 
  | { name: 'base_experience_in', alias?: string  } 
  | { name: 'base_experience_not_in', alias?: string  } 
  | { name: 'base_experience_lt', alias?: string  } 
  | { name: 'base_experience_lte', alias?: string  } 
  | { name: 'base_experience_gt', alias?: string  } 
  | { name: 'base_experience_gte', alias?: string  } 
  | { name: 'forms_every', alias?: string  } 
  | { name: 'forms_some', alias?: string  } 
  | { name: 'forms_none', alias?: string  } 
  | { name: 'game_indices_every', alias?: string  } 
  | { name: 'game_indices_some', alias?: string  } 
  | { name: 'game_indices_none', alias?: string  } 
  | { name: 'held_items_every', alias?: string  } 
  | { name: 'held_items_some', alias?: string  } 
  | { name: 'held_items_none', alias?: string  } 
  | { name: 'height', alias?: string  } 
  | { name: 'height_not', alias?: string  } 
  | { name: 'height_in', alias?: string  } 
  | { name: 'height_not_in', alias?: string  } 
  | { name: 'height_lt', alias?: string  } 
  | { name: 'height_lte', alias?: string  } 
  | { name: 'height_gt', alias?: string  } 
  | { name: 'height_gte', alias?: string  } 
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'is_default', alias?: string  } 
  | { name: 'is_default_not', alias?: string  } 
  | { name: 'location_area_encounters', alias?: string  } 
  | { name: 'location_area_encounters_not', alias?: string  } 
  | { name: 'location_area_encounters_in', alias?: string  } 
  | { name: 'location_area_encounters_not_in', alias?: string  } 
  | { name: 'location_area_encounters_lt', alias?: string  } 
  | { name: 'location_area_encounters_lte', alias?: string  } 
  | { name: 'location_area_encounters_gt', alias?: string  } 
  | { name: 'location_area_encounters_gte', alias?: string  } 
  | { name: 'location_area_encounters_contains', alias?: string  } 
  | { name: 'location_area_encounters_not_contains', alias?: string  } 
  | { name: 'location_area_encounters_starts_with', alias?: string  } 
  | { name: 'location_area_encounters_not_starts_with', alias?: string  } 
  | { name: 'location_area_encounters_ends_with', alias?: string  } 
  | { name: 'location_area_encounters_not_ends_with', alias?: string  } 
  | { name: 'moves_every', alias?: string  } 
  | { name: 'moves_some', alias?: string  } 
  | { name: 'moves_none', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'order_not', alias?: string  } 
  | { name: 'order_in', alias?: string  } 
  | { name: 'order_not_in', alias?: string  } 
  | { name: 'order_lt', alias?: string  } 
  | { name: 'order_lte', alias?: string  } 
  | { name: 'order_gt', alias?: string  } 
  | { name: 'order_gte', alias?: string  } 
  | { name: 'species_every', alias?: string  } 
  | { name: 'species_some', alias?: string  } 
  | { name: 'species_none', alias?: string  } 
  | { name: 'sprites_every', alias?: string  } 
  | { name: 'sprites_some', alias?: string  } 
  | { name: 'sprites_none', alias?: string  } 
  | { name: 'stats_every', alias?: string  } 
  | { name: 'stats_some', alias?: string  } 
  | { name: 'stats_none', alias?: string  } 
  | { name: 'types_every', alias?: string  } 
  | { name: 'types_some', alias?: string  } 
  | { name: 'types_none', alias?: string  } 
  | { name: 'weight', alias?: string  } 
  | { name: 'weight_not', alias?: string  } 
  | { name: 'weight_in', alias?: string  } 
  | { name: 'weight_not_in', alias?: string  } 
  | { name: 'weight_lt', alias?: string  } 
  | { name: 'weight_lte', alias?: string  } 
  | { name: 'weight_gt', alias?: string  } 
  | { name: 'weight_gte', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PokemonCreateInput {
  abilities?: AbilityCreateManyInput | null
  base_experience?: number | null
  forms?: FormCreateManyInput | null
  game_indices?: GameIndexCreateManyInput | null
  held_items?: ItemCreateManyInput | null
  height?: number | null
  is_default?: boolean | null
  location_area_encounters?: string | null
  moves?: MoveCreateManyInput | null
  name?: string | null
  order?: number | null
  species?: SpeciesCreateManyInput | null
  sprites?: SpriteCreateManyInput | null
  stats?: StatCreateManyInput | null
  types?: TypeCreateManyInput | null
  weight?: number | null
  url?: string | null
}
export type PokemonCreateInputInputObject =
  | Extract<keyof PokemonCreateInput, string>
  | { name: 'abilities', alias?: string  } 
  | { name: 'base_experience', alias?: string  } 
  | { name: 'forms', alias?: string  } 
  | { name: 'game_indices', alias?: string  } 
  | { name: 'held_items', alias?: string  } 
  | { name: 'height', alias?: string  } 
  | { name: 'is_default', alias?: string  } 
  | { name: 'location_area_encounters', alias?: string  } 
  | { name: 'moves', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'species', alias?: string  } 
  | { name: 'sprites', alias?: string  } 
  | { name: 'stats', alias?: string  } 
  | { name: 'types', alias?: string  } 
  | { name: 'weight', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface AbilityCreateManyInput {
  create?: AbilityCreateInput[]
}
export type AbilityCreateManyInputInputObject =
  | Extract<keyof AbilityCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  
export interface AbilityCreateInput {
  name?: string | null
  url?: string | null
}
export type AbilityCreateInputInputObject =
  | Extract<keyof AbilityCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface FormCreateManyInput {
  create?: FormCreateInput[]
}
export type FormCreateManyInputInputObject =
  | Extract<keyof FormCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  
export interface FormCreateInput {
  name?: string | null
  url?: string | null
}
export type FormCreateInputInputObject =
  | Extract<keyof FormCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface GameIndexCreateManyInput {
  create?: GameIndexCreateInput[]
}
export type GameIndexCreateManyInputInputObject =
  | Extract<keyof GameIndexCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  
export interface GameIndexCreateInput {
  name?: string | null
  url?: string | null
}
export type GameIndexCreateInputInputObject =
  | Extract<keyof GameIndexCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface ItemCreateManyInput {
  create?: ItemCreateInput[]
}
export type ItemCreateManyInputInputObject =
  | Extract<keyof ItemCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  
export interface ItemCreateInput {
  name?: string | null
  url?: string | null
}
export type ItemCreateInputInputObject =
  | Extract<keyof ItemCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface MoveCreateManyInput {
  create?: MoveCreateInput[]
}
export type MoveCreateManyInputInputObject =
  | Extract<keyof MoveCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  
export interface MoveCreateInput {
  name?: string | null
  url?: string | null
}
export type MoveCreateInputInputObject =
  | Extract<keyof MoveCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface SpeciesCreateManyInput {
  create?: SpeciesCreateInput[]
}
export type SpeciesCreateManyInputInputObject =
  | Extract<keyof SpeciesCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  
export interface SpeciesCreateInput {
  name?: string | null
  url?: string | null
}
export type SpeciesCreateInputInputObject =
  | Extract<keyof SpeciesCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface SpriteCreateManyInput {
  create?: SpriteCreateInput[]
}
export type SpriteCreateManyInputInputObject =
  | Extract<keyof SpriteCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  
export interface SpriteCreateInput {
  back_default?: string | null
  back_female?: string | null
  back_shiny?: string | null
  back_shiny_female?: string | null
  front_default?: string | null
  front_female?: string | null
  front_shiny?: string | null
  front_shiny_female?: string | null
}
export type SpriteCreateInputInputObject =
  | Extract<keyof SpriteCreateInput, string>
  | { name: 'back_default', alias?: string  } 
  | { name: 'back_female', alias?: string  } 
  | { name: 'back_shiny', alias?: string  } 
  | { name: 'back_shiny_female', alias?: string  } 
  | { name: 'front_default', alias?: string  } 
  | { name: 'front_female', alias?: string  } 
  | { name: 'front_shiny', alias?: string  } 
  | { name: 'front_shiny_female', alias?: string  } 
  
export interface StatCreateManyInput {
  create?: StatCreateInput[]
}
export type StatCreateManyInputInputObject =
  | Extract<keyof StatCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  
export interface StatCreateInput {
  base_stat?: number | null
  effort?: number | null
  name?: string | null
  url?: string | null
}
export type StatCreateInputInputObject =
  | Extract<keyof StatCreateInput, string>
  | { name: 'base_stat', alias?: string  } 
  | { name: 'effort', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface TypeCreateManyInput {
  create?: TypeCreateInput[]
}
export type TypeCreateManyInputInputObject =
  | Extract<keyof TypeCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  
export interface TypeCreateInput {
  slot?: number | null
  name?: string | null
  url?: string | null
}
export type TypeCreateInputInputObject =
  | Extract<keyof TypeCreateInput, string>
  | { name: 'slot', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface PokemonUpdateInput {
  abilities?: AbilityUpdateManyInput | null
  base_experience?: number | null
  forms?: FormUpdateManyInput | null
  game_indices?: GameIndexUpdateManyInput | null
  held_items?: ItemUpdateManyInput | null
  height?: number | null
  is_default?: boolean | null
  location_area_encounters?: string | null
  moves?: MoveUpdateManyInput | null
  name?: string | null
  order?: number | null
  species?: SpeciesUpdateManyInput | null
  sprites?: SpriteUpdateManyInput | null
  stats?: StatUpdateManyInput | null
  types?: TypeUpdateManyInput | null
  weight?: number | null
  url?: string | null
}
export type PokemonUpdateInputInputObject =
  | Extract<keyof PokemonUpdateInput, string>
  | { name: 'abilities', alias?: string  } 
  | { name: 'base_experience', alias?: string  } 
  | { name: 'forms', alias?: string  } 
  | { name: 'game_indices', alias?: string  } 
  | { name: 'held_items', alias?: string  } 
  | { name: 'height', alias?: string  } 
  | { name: 'is_default', alias?: string  } 
  | { name: 'location_area_encounters', alias?: string  } 
  | { name: 'moves', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'species', alias?: string  } 
  | { name: 'sprites', alias?: string  } 
  | { name: 'stats', alias?: string  } 
  | { name: 'types', alias?: string  } 
  | { name: 'weight', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface AbilityUpdateManyInput {
  create?: AbilityCreateInput[]
  deleteMany?: AbilityScalarWhereInput[]
  updateMany?: AbilityUpdateManyWithWhereNestedInput[]
}
export type AbilityUpdateManyInputInputObject =
  | Extract<keyof AbilityUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface AbilityScalarWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: AbilityScalarWhereInput[]
  OR?: AbilityScalarWhereInput[]
  NOT?: AbilityScalarWhereInput[]
}
export type AbilityScalarWhereInputInputObject =
  | Extract<keyof AbilityScalarWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AbilityUpdateManyWithWhereNestedInput {
  where?: AbilityScalarWhereInput
  data?: AbilityUpdateManyDataInput
}
export type AbilityUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof AbilityUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface AbilityUpdateManyDataInput {
  name?: string | null
  url?: string | null
}
export type AbilityUpdateManyDataInputInputObject =
  | Extract<keyof AbilityUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface FormUpdateManyInput {
  create?: FormCreateInput[]
  deleteMany?: FormScalarWhereInput[]
  updateMany?: FormUpdateManyWithWhereNestedInput[]
}
export type FormUpdateManyInputInputObject =
  | Extract<keyof FormUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface FormScalarWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: FormScalarWhereInput[]
  OR?: FormScalarWhereInput[]
  NOT?: FormScalarWhereInput[]
}
export type FormScalarWhereInputInputObject =
  | Extract<keyof FormScalarWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface FormUpdateManyWithWhereNestedInput {
  where?: FormScalarWhereInput
  data?: FormUpdateManyDataInput
}
export type FormUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof FormUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface FormUpdateManyDataInput {
  name?: string | null
  url?: string | null
}
export type FormUpdateManyDataInputInputObject =
  | Extract<keyof FormUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface GameIndexUpdateManyInput {
  create?: GameIndexCreateInput[]
  deleteMany?: GameIndexScalarWhereInput[]
  updateMany?: GameIndexUpdateManyWithWhereNestedInput[]
}
export type GameIndexUpdateManyInputInputObject =
  | Extract<keyof GameIndexUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface GameIndexScalarWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: GameIndexScalarWhereInput[]
  OR?: GameIndexScalarWhereInput[]
  NOT?: GameIndexScalarWhereInput[]
}
export type GameIndexScalarWhereInputInputObject =
  | Extract<keyof GameIndexScalarWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface GameIndexUpdateManyWithWhereNestedInput {
  where?: GameIndexScalarWhereInput
  data?: GameIndexUpdateManyDataInput
}
export type GameIndexUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof GameIndexUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface GameIndexUpdateManyDataInput {
  name?: string | null
  url?: string | null
}
export type GameIndexUpdateManyDataInputInputObject =
  | Extract<keyof GameIndexUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface ItemUpdateManyInput {
  create?: ItemCreateInput[]
  deleteMany?: ItemScalarWhereInput[]
  updateMany?: ItemUpdateManyWithWhereNestedInput[]
}
export type ItemUpdateManyInputInputObject =
  | Extract<keyof ItemUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ItemScalarWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: ItemScalarWhereInput[]
  OR?: ItemScalarWhereInput[]
  NOT?: ItemScalarWhereInput[]
}
export type ItemScalarWhereInputInputObject =
  | Extract<keyof ItemScalarWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ItemUpdateManyWithWhereNestedInput {
  where?: ItemScalarWhereInput
  data?: ItemUpdateManyDataInput
}
export type ItemUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ItemUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ItemUpdateManyDataInput {
  name?: string | null
  url?: string | null
}
export type ItemUpdateManyDataInputInputObject =
  | Extract<keyof ItemUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface MoveUpdateManyInput {
  create?: MoveCreateInput[]
  deleteMany?: MoveScalarWhereInput[]
  updateMany?: MoveUpdateManyWithWhereNestedInput[]
}
export type MoveUpdateManyInputInputObject =
  | Extract<keyof MoveUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MoveScalarWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: MoveScalarWhereInput[]
  OR?: MoveScalarWhereInput[]
  NOT?: MoveScalarWhereInput[]
}
export type MoveScalarWhereInputInputObject =
  | Extract<keyof MoveScalarWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MoveUpdateManyWithWhereNestedInput {
  where?: MoveScalarWhereInput
  data?: MoveUpdateManyDataInput
}
export type MoveUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof MoveUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MoveUpdateManyDataInput {
  name?: string | null
  url?: string | null
}
export type MoveUpdateManyDataInputInputObject =
  | Extract<keyof MoveUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface SpeciesUpdateManyInput {
  create?: SpeciesCreateInput[]
  deleteMany?: SpeciesScalarWhereInput[]
  updateMany?: SpeciesUpdateManyWithWhereNestedInput[]
}
export type SpeciesUpdateManyInputInputObject =
  | Extract<keyof SpeciesUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface SpeciesScalarWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: SpeciesScalarWhereInput[]
  OR?: SpeciesScalarWhereInput[]
  NOT?: SpeciesScalarWhereInput[]
}
export type SpeciesScalarWhereInputInputObject =
  | Extract<keyof SpeciesScalarWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SpeciesUpdateManyWithWhereNestedInput {
  where?: SpeciesScalarWhereInput
  data?: SpeciesUpdateManyDataInput
}
export type SpeciesUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof SpeciesUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface SpeciesUpdateManyDataInput {
  name?: string | null
  url?: string | null
}
export type SpeciesUpdateManyDataInputInputObject =
  | Extract<keyof SpeciesUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface SpriteUpdateManyInput {
  create?: SpriteCreateInput[]
  deleteMany?: SpriteScalarWhereInput[]
  updateMany?: SpriteUpdateManyWithWhereNestedInput[]
}
export type SpriteUpdateManyInputInputObject =
  | Extract<keyof SpriteUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface SpriteScalarWhereInput {
  back_default?: string | null
  back_default_not?: string | null
  back_default_in?: string[]
  back_default_not_in?: string[]
  back_default_lt?: string | null
  back_default_lte?: string | null
  back_default_gt?: string | null
  back_default_gte?: string | null
  back_default_contains?: string | null
  back_default_not_contains?: string | null
  back_default_starts_with?: string | null
  back_default_not_starts_with?: string | null
  back_default_ends_with?: string | null
  back_default_not_ends_with?: string | null
  back_female?: string | null
  back_female_not?: string | null
  back_female_in?: string[]
  back_female_not_in?: string[]
  back_female_lt?: string | null
  back_female_lte?: string | null
  back_female_gt?: string | null
  back_female_gte?: string | null
  back_female_contains?: string | null
  back_female_not_contains?: string | null
  back_female_starts_with?: string | null
  back_female_not_starts_with?: string | null
  back_female_ends_with?: string | null
  back_female_not_ends_with?: string | null
  back_shiny?: string | null
  back_shiny_not?: string | null
  back_shiny_in?: string[]
  back_shiny_not_in?: string[]
  back_shiny_lt?: string | null
  back_shiny_lte?: string | null
  back_shiny_gt?: string | null
  back_shiny_gte?: string | null
  back_shiny_contains?: string | null
  back_shiny_not_contains?: string | null
  back_shiny_starts_with?: string | null
  back_shiny_not_starts_with?: string | null
  back_shiny_ends_with?: string | null
  back_shiny_not_ends_with?: string | null
  back_shiny_female?: string | null
  back_shiny_female_not?: string | null
  back_shiny_female_in?: string[]
  back_shiny_female_not_in?: string[]
  back_shiny_female_lt?: string | null
  back_shiny_female_lte?: string | null
  back_shiny_female_gt?: string | null
  back_shiny_female_gte?: string | null
  back_shiny_female_contains?: string | null
  back_shiny_female_not_contains?: string | null
  back_shiny_female_starts_with?: string | null
  back_shiny_female_not_starts_with?: string | null
  back_shiny_female_ends_with?: string | null
  back_shiny_female_not_ends_with?: string | null
  front_default?: string | null
  front_default_not?: string | null
  front_default_in?: string[]
  front_default_not_in?: string[]
  front_default_lt?: string | null
  front_default_lte?: string | null
  front_default_gt?: string | null
  front_default_gte?: string | null
  front_default_contains?: string | null
  front_default_not_contains?: string | null
  front_default_starts_with?: string | null
  front_default_not_starts_with?: string | null
  front_default_ends_with?: string | null
  front_default_not_ends_with?: string | null
  front_female?: string | null
  front_female_not?: string | null
  front_female_in?: string[]
  front_female_not_in?: string[]
  front_female_lt?: string | null
  front_female_lte?: string | null
  front_female_gt?: string | null
  front_female_gte?: string | null
  front_female_contains?: string | null
  front_female_not_contains?: string | null
  front_female_starts_with?: string | null
  front_female_not_starts_with?: string | null
  front_female_ends_with?: string | null
  front_female_not_ends_with?: string | null
  front_shiny?: string | null
  front_shiny_not?: string | null
  front_shiny_in?: string[]
  front_shiny_not_in?: string[]
  front_shiny_lt?: string | null
  front_shiny_lte?: string | null
  front_shiny_gt?: string | null
  front_shiny_gte?: string | null
  front_shiny_contains?: string | null
  front_shiny_not_contains?: string | null
  front_shiny_starts_with?: string | null
  front_shiny_not_starts_with?: string | null
  front_shiny_ends_with?: string | null
  front_shiny_not_ends_with?: string | null
  front_shiny_female?: string | null
  front_shiny_female_not?: string | null
  front_shiny_female_in?: string[]
  front_shiny_female_not_in?: string[]
  front_shiny_female_lt?: string | null
  front_shiny_female_lte?: string | null
  front_shiny_female_gt?: string | null
  front_shiny_female_gte?: string | null
  front_shiny_female_contains?: string | null
  front_shiny_female_not_contains?: string | null
  front_shiny_female_starts_with?: string | null
  front_shiny_female_not_starts_with?: string | null
  front_shiny_female_ends_with?: string | null
  front_shiny_female_not_ends_with?: string | null
  AND?: SpriteScalarWhereInput[]
  OR?: SpriteScalarWhereInput[]
  NOT?: SpriteScalarWhereInput[]
}
export type SpriteScalarWhereInputInputObject =
  | Extract<keyof SpriteScalarWhereInput, string>
  | { name: 'back_default', alias?: string  } 
  | { name: 'back_default_not', alias?: string  } 
  | { name: 'back_default_in', alias?: string  } 
  | { name: 'back_default_not_in', alias?: string  } 
  | { name: 'back_default_lt', alias?: string  } 
  | { name: 'back_default_lte', alias?: string  } 
  | { name: 'back_default_gt', alias?: string  } 
  | { name: 'back_default_gte', alias?: string  } 
  | { name: 'back_default_contains', alias?: string  } 
  | { name: 'back_default_not_contains', alias?: string  } 
  | { name: 'back_default_starts_with', alias?: string  } 
  | { name: 'back_default_not_starts_with', alias?: string  } 
  | { name: 'back_default_ends_with', alias?: string  } 
  | { name: 'back_default_not_ends_with', alias?: string  } 
  | { name: 'back_female', alias?: string  } 
  | { name: 'back_female_not', alias?: string  } 
  | { name: 'back_female_in', alias?: string  } 
  | { name: 'back_female_not_in', alias?: string  } 
  | { name: 'back_female_lt', alias?: string  } 
  | { name: 'back_female_lte', alias?: string  } 
  | { name: 'back_female_gt', alias?: string  } 
  | { name: 'back_female_gte', alias?: string  } 
  | { name: 'back_female_contains', alias?: string  } 
  | { name: 'back_female_not_contains', alias?: string  } 
  | { name: 'back_female_starts_with', alias?: string  } 
  | { name: 'back_female_not_starts_with', alias?: string  } 
  | { name: 'back_female_ends_with', alias?: string  } 
  | { name: 'back_female_not_ends_with', alias?: string  } 
  | { name: 'back_shiny', alias?: string  } 
  | { name: 'back_shiny_not', alias?: string  } 
  | { name: 'back_shiny_in', alias?: string  } 
  | { name: 'back_shiny_not_in', alias?: string  } 
  | { name: 'back_shiny_lt', alias?: string  } 
  | { name: 'back_shiny_lte', alias?: string  } 
  | { name: 'back_shiny_gt', alias?: string  } 
  | { name: 'back_shiny_gte', alias?: string  } 
  | { name: 'back_shiny_contains', alias?: string  } 
  | { name: 'back_shiny_not_contains', alias?: string  } 
  | { name: 'back_shiny_starts_with', alias?: string  } 
  | { name: 'back_shiny_not_starts_with', alias?: string  } 
  | { name: 'back_shiny_ends_with', alias?: string  } 
  | { name: 'back_shiny_not_ends_with', alias?: string  } 
  | { name: 'back_shiny_female', alias?: string  } 
  | { name: 'back_shiny_female_not', alias?: string  } 
  | { name: 'back_shiny_female_in', alias?: string  } 
  | { name: 'back_shiny_female_not_in', alias?: string  } 
  | { name: 'back_shiny_female_lt', alias?: string  } 
  | { name: 'back_shiny_female_lte', alias?: string  } 
  | { name: 'back_shiny_female_gt', alias?: string  } 
  | { name: 'back_shiny_female_gte', alias?: string  } 
  | { name: 'back_shiny_female_contains', alias?: string  } 
  | { name: 'back_shiny_female_not_contains', alias?: string  } 
  | { name: 'back_shiny_female_starts_with', alias?: string  } 
  | { name: 'back_shiny_female_not_starts_with', alias?: string  } 
  | { name: 'back_shiny_female_ends_with', alias?: string  } 
  | { name: 'back_shiny_female_not_ends_with', alias?: string  } 
  | { name: 'front_default', alias?: string  } 
  | { name: 'front_default_not', alias?: string  } 
  | { name: 'front_default_in', alias?: string  } 
  | { name: 'front_default_not_in', alias?: string  } 
  | { name: 'front_default_lt', alias?: string  } 
  | { name: 'front_default_lte', alias?: string  } 
  | { name: 'front_default_gt', alias?: string  } 
  | { name: 'front_default_gte', alias?: string  } 
  | { name: 'front_default_contains', alias?: string  } 
  | { name: 'front_default_not_contains', alias?: string  } 
  | { name: 'front_default_starts_with', alias?: string  } 
  | { name: 'front_default_not_starts_with', alias?: string  } 
  | { name: 'front_default_ends_with', alias?: string  } 
  | { name: 'front_default_not_ends_with', alias?: string  } 
  | { name: 'front_female', alias?: string  } 
  | { name: 'front_female_not', alias?: string  } 
  | { name: 'front_female_in', alias?: string  } 
  | { name: 'front_female_not_in', alias?: string  } 
  | { name: 'front_female_lt', alias?: string  } 
  | { name: 'front_female_lte', alias?: string  } 
  | { name: 'front_female_gt', alias?: string  } 
  | { name: 'front_female_gte', alias?: string  } 
  | { name: 'front_female_contains', alias?: string  } 
  | { name: 'front_female_not_contains', alias?: string  } 
  | { name: 'front_female_starts_with', alias?: string  } 
  | { name: 'front_female_not_starts_with', alias?: string  } 
  | { name: 'front_female_ends_with', alias?: string  } 
  | { name: 'front_female_not_ends_with', alias?: string  } 
  | { name: 'front_shiny', alias?: string  } 
  | { name: 'front_shiny_not', alias?: string  } 
  | { name: 'front_shiny_in', alias?: string  } 
  | { name: 'front_shiny_not_in', alias?: string  } 
  | { name: 'front_shiny_lt', alias?: string  } 
  | { name: 'front_shiny_lte', alias?: string  } 
  | { name: 'front_shiny_gt', alias?: string  } 
  | { name: 'front_shiny_gte', alias?: string  } 
  | { name: 'front_shiny_contains', alias?: string  } 
  | { name: 'front_shiny_not_contains', alias?: string  } 
  | { name: 'front_shiny_starts_with', alias?: string  } 
  | { name: 'front_shiny_not_starts_with', alias?: string  } 
  | { name: 'front_shiny_ends_with', alias?: string  } 
  | { name: 'front_shiny_not_ends_with', alias?: string  } 
  | { name: 'front_shiny_female', alias?: string  } 
  | { name: 'front_shiny_female_not', alias?: string  } 
  | { name: 'front_shiny_female_in', alias?: string  } 
  | { name: 'front_shiny_female_not_in', alias?: string  } 
  | { name: 'front_shiny_female_lt', alias?: string  } 
  | { name: 'front_shiny_female_lte', alias?: string  } 
  | { name: 'front_shiny_female_gt', alias?: string  } 
  | { name: 'front_shiny_female_gte', alias?: string  } 
  | { name: 'front_shiny_female_contains', alias?: string  } 
  | { name: 'front_shiny_female_not_contains', alias?: string  } 
  | { name: 'front_shiny_female_starts_with', alias?: string  } 
  | { name: 'front_shiny_female_not_starts_with', alias?: string  } 
  | { name: 'front_shiny_female_ends_with', alias?: string  } 
  | { name: 'front_shiny_female_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SpriteUpdateManyWithWhereNestedInput {
  where?: SpriteScalarWhereInput
  data?: SpriteUpdateManyDataInput
}
export type SpriteUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof SpriteUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface SpriteUpdateManyDataInput {
  back_default?: string | null
  back_female?: string | null
  back_shiny?: string | null
  back_shiny_female?: string | null
  front_default?: string | null
  front_female?: string | null
  front_shiny?: string | null
  front_shiny_female?: string | null
}
export type SpriteUpdateManyDataInputInputObject =
  | Extract<keyof SpriteUpdateManyDataInput, string>
  | { name: 'back_default', alias?: string  } 
  | { name: 'back_female', alias?: string  } 
  | { name: 'back_shiny', alias?: string  } 
  | { name: 'back_shiny_female', alias?: string  } 
  | { name: 'front_default', alias?: string  } 
  | { name: 'front_female', alias?: string  } 
  | { name: 'front_shiny', alias?: string  } 
  | { name: 'front_shiny_female', alias?: string  } 
  
export interface StatUpdateManyInput {
  create?: StatCreateInput[]
  deleteMany?: StatScalarWhereInput[]
  updateMany?: StatUpdateManyWithWhereNestedInput[]
}
export type StatUpdateManyInputInputObject =
  | Extract<keyof StatUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface StatScalarWhereInput {
  base_stat?: number | null
  base_stat_not?: number | null
  base_stat_in?: number[]
  base_stat_not_in?: number[]
  base_stat_lt?: number | null
  base_stat_lte?: number | null
  base_stat_gt?: number | null
  base_stat_gte?: number | null
  effort?: number | null
  effort_not?: number | null
  effort_in?: number[]
  effort_not_in?: number[]
  effort_lt?: number | null
  effort_lte?: number | null
  effort_gt?: number | null
  effort_gte?: number | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: StatScalarWhereInput[]
  OR?: StatScalarWhereInput[]
  NOT?: StatScalarWhereInput[]
}
export type StatScalarWhereInputInputObject =
  | Extract<keyof StatScalarWhereInput, string>
  | { name: 'base_stat', alias?: string  } 
  | { name: 'base_stat_not', alias?: string  } 
  | { name: 'base_stat_in', alias?: string  } 
  | { name: 'base_stat_not_in', alias?: string  } 
  | { name: 'base_stat_lt', alias?: string  } 
  | { name: 'base_stat_lte', alias?: string  } 
  | { name: 'base_stat_gt', alias?: string  } 
  | { name: 'base_stat_gte', alias?: string  } 
  | { name: 'effort', alias?: string  } 
  | { name: 'effort_not', alias?: string  } 
  | { name: 'effort_in', alias?: string  } 
  | { name: 'effort_not_in', alias?: string  } 
  | { name: 'effort_lt', alias?: string  } 
  | { name: 'effort_lte', alias?: string  } 
  | { name: 'effort_gt', alias?: string  } 
  | { name: 'effort_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface StatUpdateManyWithWhereNestedInput {
  where?: StatScalarWhereInput
  data?: StatUpdateManyDataInput
}
export type StatUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof StatUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface StatUpdateManyDataInput {
  base_stat?: number | null
  effort?: number | null
  name?: string | null
  url?: string | null
}
export type StatUpdateManyDataInputInputObject =
  | Extract<keyof StatUpdateManyDataInput, string>
  | { name: 'base_stat', alias?: string  } 
  | { name: 'effort', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface TypeUpdateManyInput {
  create?: TypeCreateInput[]
  deleteMany?: TypeScalarWhereInput[]
  updateMany?: TypeUpdateManyWithWhereNestedInput[]
}
export type TypeUpdateManyInputInputObject =
  | Extract<keyof TypeUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface TypeScalarWhereInput {
  slot?: number | null
  slot_not?: number | null
  slot_in?: number[]
  slot_not_in?: number[]
  slot_lt?: number | null
  slot_lte?: number | null
  slot_gt?: number | null
  slot_gte?: number | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: TypeScalarWhereInput[]
  OR?: TypeScalarWhereInput[]
  NOT?: TypeScalarWhereInput[]
}
export type TypeScalarWhereInputInputObject =
  | Extract<keyof TypeScalarWhereInput, string>
  | { name: 'slot', alias?: string  } 
  | { name: 'slot_not', alias?: string  } 
  | { name: 'slot_in', alias?: string  } 
  | { name: 'slot_not_in', alias?: string  } 
  | { name: 'slot_lt', alias?: string  } 
  | { name: 'slot_lte', alias?: string  } 
  | { name: 'slot_gt', alias?: string  } 
  | { name: 'slot_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TypeUpdateManyWithWhereNestedInput {
  where?: TypeScalarWhereInput
  data?: TypeUpdateManyDataInput
}
export type TypeUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof TypeUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface TypeUpdateManyDataInput {
  slot?: number | null
  name?: string | null
  url?: string | null
}
export type TypeUpdateManyDataInputInputObject =
  | Extract<keyof TypeUpdateManyDataInput, string>
  | { name: 'slot', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface PokemonUpdateManyMutationInput {
  base_experience?: number | null
  height?: number | null
  is_default?: boolean | null
  location_area_encounters?: string | null
  name?: string | null
  order?: number | null
  weight?: number | null
  url?: string | null
}
export type PokemonUpdateManyMutationInputInputObject =
  | Extract<keyof PokemonUpdateManyMutationInput, string>
  | { name: 'base_experience', alias?: string  } 
  | { name: 'height', alias?: string  } 
  | { name: 'is_default', alias?: string  } 
  | { name: 'location_area_encounters', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'weight', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface AbilityUpdateManyMutationInput {
  name?: string | null
  url?: string | null
}
export type AbilityUpdateManyMutationInputInputObject =
  | Extract<keyof AbilityUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface FormUpdateManyMutationInput {
  name?: string | null
  url?: string | null
}
export type FormUpdateManyMutationInputInputObject =
  | Extract<keyof FormUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface GameIndexUpdateManyMutationInput {
  name?: string | null
  url?: string | null
}
export type GameIndexUpdateManyMutationInputInputObject =
  | Extract<keyof GameIndexUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface ItemUpdateManyMutationInput {
  name?: string | null
  url?: string | null
}
export type ItemUpdateManyMutationInputInputObject =
  | Extract<keyof ItemUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface MoveUpdateManyMutationInput {
  name?: string | null
  url?: string | null
}
export type MoveUpdateManyMutationInputInputObject =
  | Extract<keyof MoveUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface SpeciesUpdateManyMutationInput {
  name?: string | null
  url?: string | null
}
export type SpeciesUpdateManyMutationInputInputObject =
  | Extract<keyof SpeciesUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface SpriteUpdateManyMutationInput {
  back_default?: string | null
  back_female?: string | null
  back_shiny?: string | null
  back_shiny_female?: string | null
  front_default?: string | null
  front_female?: string | null
  front_shiny?: string | null
  front_shiny_female?: string | null
}
export type SpriteUpdateManyMutationInputInputObject =
  | Extract<keyof SpriteUpdateManyMutationInput, string>
  | { name: 'back_default', alias?: string  } 
  | { name: 'back_female', alias?: string  } 
  | { name: 'back_shiny', alias?: string  } 
  | { name: 'back_shiny_female', alias?: string  } 
  | { name: 'front_default', alias?: string  } 
  | { name: 'front_female', alias?: string  } 
  | { name: 'front_shiny', alias?: string  } 
  | { name: 'front_shiny_female', alias?: string  } 
  
export interface StatUpdateManyMutationInput {
  base_stat?: number | null
  effort?: number | null
  name?: string | null
  url?: string | null
}
export type StatUpdateManyMutationInputInputObject =
  | Extract<keyof StatUpdateManyMutationInput, string>
  | { name: 'base_stat', alias?: string  } 
  | { name: 'effort', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface TypeUpdateManyMutationInput {
  slot?: number | null
  name?: string | null
  url?: string | null
}
export type TypeUpdateManyMutationInputInputObject =
  | Extract<keyof TypeUpdateManyMutationInput, string>
  | { name: 'slot', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface PokemonSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PokemonWhereInput | null
  AND?: PokemonSubscriptionWhereInput[]
  OR?: PokemonSubscriptionWhereInput[]
  NOT?: PokemonSubscriptionWhereInput[]
}
export type PokemonSubscriptionWhereInputInputObject =
  | Extract<keyof PokemonSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AbilitySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: AbilityWhereInput | null
  AND?: AbilitySubscriptionWhereInput[]
  OR?: AbilitySubscriptionWhereInput[]
  NOT?: AbilitySubscriptionWhereInput[]
}
export type AbilitySubscriptionWhereInputInputObject =
  | Extract<keyof AbilitySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface FormSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: FormWhereInput | null
  AND?: FormSubscriptionWhereInput[]
  OR?: FormSubscriptionWhereInput[]
  NOT?: FormSubscriptionWhereInput[]
}
export type FormSubscriptionWhereInputInputObject =
  | Extract<keyof FormSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface GameIndexSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: GameIndexWhereInput | null
  AND?: GameIndexSubscriptionWhereInput[]
  OR?: GameIndexSubscriptionWhereInput[]
  NOT?: GameIndexSubscriptionWhereInput[]
}
export type GameIndexSubscriptionWhereInputInputObject =
  | Extract<keyof GameIndexSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ItemWhereInput | null
  AND?: ItemSubscriptionWhereInput[]
  OR?: ItemSubscriptionWhereInput[]
  NOT?: ItemSubscriptionWhereInput[]
}
export type ItemSubscriptionWhereInputInputObject =
  | Extract<keyof ItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MoveSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MoveWhereInput | null
  AND?: MoveSubscriptionWhereInput[]
  OR?: MoveSubscriptionWhereInput[]
  NOT?: MoveSubscriptionWhereInput[]
}
export type MoveSubscriptionWhereInputInputObject =
  | Extract<keyof MoveSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SpeciesSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SpeciesWhereInput | null
  AND?: SpeciesSubscriptionWhereInput[]
  OR?: SpeciesSubscriptionWhereInput[]
  NOT?: SpeciesSubscriptionWhereInput[]
}
export type SpeciesSubscriptionWhereInputInputObject =
  | Extract<keyof SpeciesSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SpriteSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SpriteWhereInput | null
  AND?: SpriteSubscriptionWhereInput[]
  OR?: SpriteSubscriptionWhereInput[]
  NOT?: SpriteSubscriptionWhereInput[]
}
export type SpriteSubscriptionWhereInputInputObject =
  | Extract<keyof SpriteSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface StatSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: StatWhereInput | null
  AND?: StatSubscriptionWhereInput[]
  OR?: StatSubscriptionWhereInput[]
  NOT?: StatSubscriptionWhereInput[]
}
export type StatSubscriptionWhereInputInputObject =
  | Extract<keyof StatSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TypeSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: TypeWhereInput | null
  AND?: TypeSubscriptionWhereInput[]
  OR?: TypeSubscriptionWhereInput[]
  NOT?: TypeSubscriptionWhereInput[]
}
export type TypeSubscriptionWhereInputInputObject =
  | Extract<keyof TypeSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type AbilityOrderByInputValues =
  | 'name_ASC'
  | 'name_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type FormOrderByInputValues =
  | 'name_ASC'
  | 'name_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type GameIndexOrderByInputValues =
  | 'name_ASC'
  | 'name_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ItemOrderByInputValues =
  | 'name_ASC'
  | 'name_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MoveOrderByInputValues =
  | 'name_ASC'
  | 'name_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SpeciesOrderByInputValues =
  | 'name_ASC'
  | 'name_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SpriteOrderByInputValues =
  | 'back_default_ASC'
  | 'back_default_DESC'
  | 'back_female_ASC'
  | 'back_female_DESC'
  | 'back_shiny_ASC'
  | 'back_shiny_DESC'
  | 'back_shiny_female_ASC'
  | 'back_shiny_female_DESC'
  | 'front_default_ASC'
  | 'front_default_DESC'
  | 'front_female_ASC'
  | 'front_female_DESC'
  | 'front_shiny_ASC'
  | 'front_shiny_DESC'
  | 'front_shiny_female_ASC'
  | 'front_shiny_female_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type StatOrderByInputValues =
  | 'base_stat_ASC'
  | 'base_stat_DESC'
  | 'effort_ASC'
  | 'effort_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type TypeOrderByInputValues =
  | 'slot_ASC'
  | 'slot_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type PokemonOrderByInputValues =
  | 'base_experience_ASC'
  | 'base_experience_DESC'
  | 'height_ASC'
  | 'height_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'is_default_ASC'
  | 'is_default_DESC'
  | 'location_area_encounters_ASC'
  | 'location_area_encounters_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'order_ASC'
  | 'order_DESC'
  | 'weight_ASC'
  | 'weight_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  