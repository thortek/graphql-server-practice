### This file was autogenerated by Nexus 0.11.2
### Do not make changes to this file directly


type Ability {
  name: String
  url: String
}

input AbilityCreateInput {
  name: String
  url: String
}

input AbilityCreateManyInput {
  create: [AbilityCreateInput!]
}

enum AbilityOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input AbilityWhereInput {
  AND: [AbilityWhereInput!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [AbilityWhereInput!]
  OR: [AbilityWhereInput!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

type Form {
  name: String
  url: String
}

input FormCreateInput {
  name: String
  url: String
}

input FormCreateManyInput {
  create: [FormCreateInput!]
}

enum FormOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input FormWhereInput {
  AND: [FormWhereInput!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [FormWhereInput!]
  OR: [FormWhereInput!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

type GameIndex {
  name: String
  url: String
}

input GameIndexCreateInput {
  name: String
  url: String
}

input GameIndexCreateManyInput {
  create: [GameIndexCreateInput!]
}

enum GameIndexOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input GameIndexWhereInput {
  AND: [GameIndexWhereInput!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [GameIndexWhereInput!]
  OR: [GameIndexWhereInput!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

type Item {
  name: String
  url: String
}

input ItemCreateInput {
  name: String
  url: String
}

input ItemCreateManyInput {
  create: [ItemCreateInput!]
}

enum ItemOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input ItemWhereInput {
  AND: [ItemWhereInput!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [ItemWhereInput!]
  OR: [ItemWhereInput!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

type Move {
  name: String
  url: String
}

input MoveCreateInput {
  name: String
  url: String
}

input MoveCreateManyInput {
  create: [MoveCreateInput!]
}

enum MoveOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input MoveWhereInput {
  AND: [MoveWhereInput!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [MoveWhereInput!]
  OR: [MoveWhereInput!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

type Mutation {
  createPokemon(data: PokemonCreateInput!): Pokemon!
  createStat(data: StatCreateInput!): Stat!
}

type Pokemon {
  abilities(after: String, before: String, first: Int, last: Int, orderBy: AbilityOrderByInput, skip: Int, where: AbilityWhereInput): [Ability!]
  base_experience: Int
  forms(after: String, before: String, first: Int, last: Int, orderBy: FormOrderByInput, skip: Int, where: FormWhereInput): [Form!]
  game_indices(after: String, before: String, first: Int, last: Int, orderBy: GameIndexOrderByInput, skip: Int, where: GameIndexWhereInput): [GameIndex!]
  height: Int
  held_items(after: String, before: String, first: Int, last: Int, orderBy: ItemOrderByInput, skip: Int, where: ItemWhereInput): [Item!]
  id: ID!
  is_default: Boolean
  location_area_encounters: String
  moves(after: String, before: String, first: Int, last: Int, orderBy: MoveOrderByInput, skip: Int, where: MoveWhereInput): [Move!]
  name: String
  order: Int
  species(after: String, before: String, first: Int, last: Int, orderBy: SpeciesOrderByInput, skip: Int, where: SpeciesWhereInput): [Species!]
  sprites(after: String, before: String, first: Int, last: Int, orderBy: SpriteOrderByInput, skip: Int, where: SpriteWhereInput): [Sprite!]
  stats(after: String, before: String, first: Int, last: Int, orderBy: StatOrderByInput, skip: Int, where: StatWhereInput): [Stat!]
  types(after: String, before: String, first: Int, last: Int, orderBy: TypeOrderByInput, skip: Int, where: TypeWhereInput): [Type!]
  url: String
  weight: Int
}

input PokemonCreateInput {
  abilities: AbilityCreateManyInput
  base_experience: Int
  forms: FormCreateManyInput
  game_indices: GameIndexCreateManyInput
  height: Int
  held_items: ItemCreateManyInput
  is_default: Boolean
  location_area_encounters: String
  moves: MoveCreateManyInput
  name: String
  order: Int
  species: SpeciesCreateManyInput
  sprites: SpriteCreateManyInput
  stats: StatCreateManyInput
  types: TypeCreateManyInput
  url: String
  weight: Int
}

enum PokemonOrderByInput {
  base_experience_ASC
  base_experience_DESC
  createdAt_ASC
  createdAt_DESC
  height_ASC
  height_DESC
  id_ASC
  id_DESC
  is_default_ASC
  is_default_DESC
  location_area_encounters_ASC
  location_area_encounters_DESC
  name_ASC
  name_DESC
  order_ASC
  order_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
  weight_ASC
  weight_DESC
}

input PokemonWhereInput {
  abilities_every: AbilityWhereInput
  abilities_none: AbilityWhereInput
  abilities_some: AbilityWhereInput
  AND: [PokemonWhereInput!]
  base_experience: Int
  base_experience_gt: Int
  base_experience_gte: Int
  base_experience_in: [Int!]
  base_experience_lt: Int
  base_experience_lte: Int
  base_experience_not: Int
  base_experience_not_in: [Int!]
  forms_every: FormWhereInput
  forms_none: FormWhereInput
  forms_some: FormWhereInput
  game_indices_every: GameIndexWhereInput
  game_indices_none: GameIndexWhereInput
  game_indices_some: GameIndexWhereInput
  height: Int
  height_gt: Int
  height_gte: Int
  height_in: [Int!]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int!]
  held_items_every: ItemWhereInput
  held_items_none: ItemWhereInput
  held_items_some: ItemWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  is_default: Boolean
  is_default_not: Boolean
  location_area_encounters: String
  location_area_encounters_contains: String
  location_area_encounters_ends_with: String
  location_area_encounters_gt: String
  location_area_encounters_gte: String
  location_area_encounters_in: [String!]
  location_area_encounters_lt: String
  location_area_encounters_lte: String
  location_area_encounters_not: String
  location_area_encounters_not_contains: String
  location_area_encounters_not_ends_with: String
  location_area_encounters_not_in: [String!]
  location_area_encounters_not_starts_with: String
  location_area_encounters_starts_with: String
  moves_every: MoveWhereInput
  moves_none: MoveWhereInput
  moves_some: MoveWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [PokemonWhereInput!]
  OR: [PokemonWhereInput!]
  order: Int
  order_gt: Int
  order_gte: Int
  order_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_not: Int
  order_not_in: [Int!]
  species_every: SpeciesWhereInput
  species_none: SpeciesWhereInput
  species_some: SpeciesWhereInput
  sprites_every: SpriteWhereInput
  sprites_none: SpriteWhereInput
  sprites_some: SpriteWhereInput
  stats_every: StatWhereInput
  stats_none: StatWhereInput
  stats_some: StatWhereInput
  types_every: TypeWhereInput
  types_none: TypeWhereInput
  types_some: TypeWhereInput
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
  weight: Int
  weight_gt: Int
  weight_gte: Int
  weight_in: [Int!]
  weight_lt: Int
  weight_lte: Int
  weight_not: Int
  weight_not_in: [Int!]
}

type Query {
  pokemons(after: String, before: String, first: Int, last: Int, orderBy: PokemonOrderByInput, skip: Int, where: PokemonWhereInput): [Pokemon!]!
  stats(after: String, before: String, first: Int, last: Int, orderBy: StatOrderByInput, skip: Int, where: StatWhereInput): [Stat!]!
}

type Species {
  name: String
  url: String
}

input SpeciesCreateInput {
  name: String
  url: String
}

input SpeciesCreateManyInput {
  create: [SpeciesCreateInput!]
}

enum SpeciesOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input SpeciesWhereInput {
  AND: [SpeciesWhereInput!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [SpeciesWhereInput!]
  OR: [SpeciesWhereInput!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

type Sprite {
  back_default: String
  back_female: String
  back_shiny: String
  back_shiny_female: String
  front_default: String
  front_female: String
  front_shiny: String
  front_shiny_female: String
}

input SpriteCreateInput {
  back_default: String
  back_female: String
  back_shiny: String
  back_shiny_female: String
  front_default: String
  front_female: String
  front_shiny: String
  front_shiny_female: String
}

input SpriteCreateManyInput {
  create: [SpriteCreateInput!]
}

enum SpriteOrderByInput {
  back_default_ASC
  back_default_DESC
  back_female_ASC
  back_female_DESC
  back_shiny_ASC
  back_shiny_DESC
  back_shiny_female_ASC
  back_shiny_female_DESC
  createdAt_ASC
  createdAt_DESC
  front_default_ASC
  front_default_DESC
  front_female_ASC
  front_female_DESC
  front_shiny_ASC
  front_shiny_DESC
  front_shiny_female_ASC
  front_shiny_female_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input SpriteWhereInput {
  AND: [SpriteWhereInput!]
  back_default: String
  back_default_contains: String
  back_default_ends_with: String
  back_default_gt: String
  back_default_gte: String
  back_default_in: [String!]
  back_default_lt: String
  back_default_lte: String
  back_default_not: String
  back_default_not_contains: String
  back_default_not_ends_with: String
  back_default_not_in: [String!]
  back_default_not_starts_with: String
  back_default_starts_with: String
  back_female: String
  back_female_contains: String
  back_female_ends_with: String
  back_female_gt: String
  back_female_gte: String
  back_female_in: [String!]
  back_female_lt: String
  back_female_lte: String
  back_female_not: String
  back_female_not_contains: String
  back_female_not_ends_with: String
  back_female_not_in: [String!]
  back_female_not_starts_with: String
  back_female_starts_with: String
  back_shiny: String
  back_shiny_contains: String
  back_shiny_ends_with: String
  back_shiny_female: String
  back_shiny_female_contains: String
  back_shiny_female_ends_with: String
  back_shiny_female_gt: String
  back_shiny_female_gte: String
  back_shiny_female_in: [String!]
  back_shiny_female_lt: String
  back_shiny_female_lte: String
  back_shiny_female_not: String
  back_shiny_female_not_contains: String
  back_shiny_female_not_ends_with: String
  back_shiny_female_not_in: [String!]
  back_shiny_female_not_starts_with: String
  back_shiny_female_starts_with: String
  back_shiny_gt: String
  back_shiny_gte: String
  back_shiny_in: [String!]
  back_shiny_lt: String
  back_shiny_lte: String
  back_shiny_not: String
  back_shiny_not_contains: String
  back_shiny_not_ends_with: String
  back_shiny_not_in: [String!]
  back_shiny_not_starts_with: String
  back_shiny_starts_with: String
  front_default: String
  front_default_contains: String
  front_default_ends_with: String
  front_default_gt: String
  front_default_gte: String
  front_default_in: [String!]
  front_default_lt: String
  front_default_lte: String
  front_default_not: String
  front_default_not_contains: String
  front_default_not_ends_with: String
  front_default_not_in: [String!]
  front_default_not_starts_with: String
  front_default_starts_with: String
  front_female: String
  front_female_contains: String
  front_female_ends_with: String
  front_female_gt: String
  front_female_gte: String
  front_female_in: [String!]
  front_female_lt: String
  front_female_lte: String
  front_female_not: String
  front_female_not_contains: String
  front_female_not_ends_with: String
  front_female_not_in: [String!]
  front_female_not_starts_with: String
  front_female_starts_with: String
  front_shiny: String
  front_shiny_contains: String
  front_shiny_ends_with: String
  front_shiny_female: String
  front_shiny_female_contains: String
  front_shiny_female_ends_with: String
  front_shiny_female_gt: String
  front_shiny_female_gte: String
  front_shiny_female_in: [String!]
  front_shiny_female_lt: String
  front_shiny_female_lte: String
  front_shiny_female_not: String
  front_shiny_female_not_contains: String
  front_shiny_female_not_ends_with: String
  front_shiny_female_not_in: [String!]
  front_shiny_female_not_starts_with: String
  front_shiny_female_starts_with: String
  front_shiny_gt: String
  front_shiny_gte: String
  front_shiny_in: [String!]
  front_shiny_lt: String
  front_shiny_lte: String
  front_shiny_not: String
  front_shiny_not_contains: String
  front_shiny_not_ends_with: String
  front_shiny_not_in: [String!]
  front_shiny_not_starts_with: String
  front_shiny_starts_with: String
  NOT: [SpriteWhereInput!]
  OR: [SpriteWhereInput!]
}

type Stat {
  base_stat: Int
  effort: Int
  name: String
  url: String
}

input StatCreateInput {
  base_stat: Int
  effort: Int
  name: String
  url: String
}

input StatCreateManyInput {
  create: [StatCreateInput!]
}

enum StatOrderByInput {
  base_stat_ASC
  base_stat_DESC
  createdAt_ASC
  createdAt_DESC
  effort_ASC
  effort_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input StatWhereInput {
  AND: [StatWhereInput!]
  base_stat: Int
  base_stat_gt: Int
  base_stat_gte: Int
  base_stat_in: [Int!]
  base_stat_lt: Int
  base_stat_lte: Int
  base_stat_not: Int
  base_stat_not_in: [Int!]
  effort: Int
  effort_gt: Int
  effort_gte: Int
  effort_in: [Int!]
  effort_lt: Int
  effort_lte: Int
  effort_not: Int
  effort_not_in: [Int!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [StatWhereInput!]
  OR: [StatWhereInput!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

type Type {
  name: String
  slot: Int
  url: String
}

input TypeCreateInput {
  name: String
  slot: Int
  url: String
}

input TypeCreateManyInput {
  create: [TypeCreateInput!]
}

enum TypeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  slot_ASC
  slot_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input TypeWhereInput {
  AND: [TypeWhereInput!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [TypeWhereInput!]
  OR: [TypeWhereInput!]
  slot: Int
  slot_gt: Int
  slot_gte: Int
  slot_in: [Int!]
  slot_lt: Int
  slot_lte: Int
  slot_not: Int
  slot_not_in: [Int!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}
